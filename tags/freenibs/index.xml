<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Freenibs on </title>
    <link>http://b-comm.ru/tags/freenibs/index.xml</link>
    <description>Recent content in Freenibs on </description>
    <generator>Hugo -- gohugo.io</generator>
    <atom:link href="http://b-comm.ru/tags/freenibs/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>count.php — отображение пользователей в Онлайне для FreeNIBS</title>
      <link>http://b-comm.ru/billing/count-php-%D0%BE%D1%82%D0%BE%D0%B1%D1%80%D0%B0%D0%B6%D0%B5%D0%BD%D0%B8%D0%B5-%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D0%BE%D0%B2%D0%B0%D1%82%D0%B5%D0%BB%D0%B5%D0%B9-%D0%B2-%D0%BE%D0%BD%D0%BB%D0%B0</link>
      <pubDate>Sat, 14 Jan 2012 23:33:12 +0000</pubDate>
      
      <guid>http://b-comm.ru/billing/count-php-%D0%BE%D1%82%D0%BE%D0%B1%D1%80%D0%B0%D0%B6%D0%B5%D0%BD%D0%B8%D0%B5-%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D0%BE%D0%B2%D0%B0%D1%82%D0%B5%D0%BB%D0%B5%D0%B9-%D0%B2-%D0%BE%D0%BD%D0%BB%D0%B0</guid>
      <description>&lt;p&gt;count.php — отображение пользователей в Онлайне для FreeNIBS&lt;/p&gt;

&lt;pre lang=&#34;php&#34;&gt;&lt;?php
function ret_speed_($speed){
   $pref=&#39;&#39;;

    if($speed&gt;1024){
        $t=round(($speed/1024),2);
        if($t&gt;1024){
            $speed=$t;
            $t=round(($speed/1024),2);
            if($t&gt;1024){
                $speed=$t;
                $t=round(($speed/1024),2);
                 if($t&gt;1024){
                     $speed=$t;

                 }else{
                      $speed=$t;$pref=&#39;G&#39;;
                 }



            }else{
                $speed=$t;$pref=&#39;M&#39;;
            }

        }else{
            $speed=$t;
            $pref=&#39;K&#39;;
        }

   }
        return $speed.$pref.&#34;bit/s&#34;;

}

$TOP = &#34; Speed of users&#34;;
$META = &#34;&lt;META HTTP-EQUIV=\&#34;Refresh\&#34; CONTENT=\&#34;60\&#34;&gt;\n&lt;META HTTP-EQUIV=\&#34;Cache-Control\&#34; CONTENT=\&#34;no-cache\&#34;&gt;\n&lt;META HTTP-EQUIV=\&#34;Pragma\&#34; CONTENT=\&#34;no-cache\&#34;&gt;&#34;;

include(&#34;top.php&#34;);
?&gt;


&lt;CENTER&gt;
  &lt;?php

/* коннект к БД - меняем на свое */
$link = mysql_connect(&#39;10.200.205.224&#39;, &#39;freenibs&#39;, &#39;freenibs&#39;);
if (!$link) {
    die(&#39;Could not connect: &#39; . mysql_error());
}

mysql_select_db(&#34;freenibs&#34;);
$q=&#34;SELECT *,`in_speed`,ip AS `ip4` FROM `speed_counter` WHERE `interface`!=&#39;&#39; &#34;;

$q=&#34;SELECT
    `speed_counter`.`gid`,
    `packets`.`packet`,
    `speed_counter`.`user`,
    `speed_counter`.`in_speed`,
    `speed_counter`.`all_last`,
    `speed_counter`.`in_last`,
    `speed_counter`.`out_last`,
    `speed_counter`.`all_speed`,
    `speed_counter`.`out_speed`,
    `speed_counter`.`in_load`,
    `speed_counter`.`out_load`,
    `speed_counter`.`interface`,
    `speed_counter`.`speed_car_in`,
    `speed_counter`.`speed_car_out`,

     `speed_counter`.`ip`  AS `ip4`
FROM `speed_counter`
LEFT JOIN `users` ON `users`.`framed_ip` = `speed_counter`.`ip`
LEFT JOIN `packets` ON `users`.`gid` = `packets`.`gid`
WHERE
    `interface` != &#39;&#39;
&#34;;
/*
 * $q=&#34;SELECT
INET_NTOA(ip) AS `ip4`,`all_last`,`in_last`,`out_last`,`time_last`,`all_speed`,`in_speed`,`out_speed`,`in_load`,
`out_load`,`interface`,`speed_car_in`,`speed_car_out`,`gid`,`user`,`uid`
 FROM `speed_counter`
WHERE
    `interface` != &#39;&#39;
  &#34;;
*/

switch($_GET[&#39;type&#39;]){
case &#34;all_speed&#34;:
        $q.=&#34; ORDER by `all_speed` DESC&#34;;
break;
case &#34;node&#34;:
         $q.=&#34; ORDER by `interface`  DESC&#34;;
         break;
case &#34;packet&#34;:
        $q.=&#34; ORDER by `packets`.`gid` DESC&#34;;
        if($_GET[&#39;gid&#39;]&gt;0)
  
              $q=&#34;SELECT
                  `packets`.`gid`,
                  `packets`.`packet`,
                  `users`.`user`,
                  `speed_counter`.`in_speed`,
                  `speed_counter`.`all_last`,
                  `speed_counter`.`in_last`,
                  `speed_counter`.`out_last`,
                  `speed_counter`.`all_speed`,
                  `speed_counter`.`out_speed`,
                  `speed_counter`.`in_load`,
                  `speed_counter`.`out_load`,
                  `speed_counter`.`interface`,
                  `speed_counter`.`speed_car_in`,
                  `speed_counter`.`speed_car_out`,
  
                    `speed_counter`.`ip`  AS `ip4`
  
                FROM `speed_counter`
                    LEFT JOIN `users` ON `users`.`framed_ip` = `speed_counter`.`ip`
                    INNER JOIN `packets` ON (`users`.`gid` = `packets`.`gid` AND `packets`.`gid`=&#39;&#34;.$_GET[&#39;gid&#39;].&#34;&#39;)
                    WHERE `interface` != &#39;&#39;
                   ORDER by `all_speed` DESC                                &#34;;
  
  
          break;
  case &#34;in_speed&#34;:
         $q.=&#34; ORDER by `in_speed`  DESC&#34;;
   break;
  case &#34;out_speed&#34;:
            $q.=&#34; ORDER by `out_speed`  DESC&#34;;
             break;
   case &#34;in_load&#34;:
           $q.=&#34; ORDER by `in_load`  DESC&#34;;
            break;
    case &#34;all_last&#34;:
           $q.=&#34; ORDER by `all_last`  DESC&#34;;
             break;
  
   case &#34;out_load&#34;:
           $q.=&#34; ORDER by `out_load`  DESC&#34;;
         break;
    case &#34;ip&#34;:
           $q.=&#34; ORDER by `ip`  DESC&#34;;
            break;
  
   default:
  
      $q.=&#34; ORDER by `all_speed` DESC&#34;;
  break;
  
  }
   // echo $q;
  
  //$q=&#34;SELECT *,`in_speed`,INET_NTOA(ip) AS `ip4` FROM `speed_counter` ORDER by `in_speed` DESC&#34;;
  
  $result = mysql_query($q);
  $n=mysql_num_rows($result);
  echo &#34;Online:&#34;.$n;
  echo &#34;&lt;table border=1&gt;&#34;;
  echo &#34;
  
  &lt;tr&gt;
    &lt;td&gt;
      &lt;a href=&#39;?type=packet&#39;&gt;Пакет&lt;/a&gt;
    &lt;/td&gt;
        
    
    &lt;td&gt;
      &lt;a href=&#39;?type=login&#39;&gt;login&lt;/a&gt;
    &lt;/td&gt;
        
    
    &lt;td&gt;
      &lt;a href=&#39;?type=all_speed&#39;&gt;Общая скорость&lt;/a&gt;&lt;br /&gt;Вход+Исход
    &lt;/td&gt;
        
    
    &lt;td&gt;
      &lt;a href=&#39;?type=ip&#39;&gt;ip&lt;/a&gt;
    &lt;/td&gt;
        
    
    &lt;td&gt;
      &lt;a href=&#39;?type=node&#39;&gt;Интерфейс&lt;/a&gt;
    &lt;/td&gt;
        
    
    &lt;td&gt;
      Стоит скорость: Вход / Исход
    &lt;/td&gt;
    
        
    
    &lt;td&gt;
      Траффик: &lt;br /&gt;  &lt;a href=&#39;?type=all_last&#39;&gt;Весь&lt;/a&gt; / &lt;a href=&#39;?type=in_last&#39;&gt;Вход&lt;/a&gt; / &lt;a href=&#39;?type=out_last&#39;&gt;Исход&lt;/a&gt; 
    &lt;/td&gt;
        
    
    &lt;td&gt;
      &lt;a href=&#39;?type=in_speed&#39;&gt;Входящая скорость&lt;/a&gt;&lt;br /&gt;
    &lt;/td&gt;
        
    
    &lt;td&gt;
      &lt;a href=&#39;?type=out_speed&#39;&gt;Исходящая скорость&lt;/a&gt;&lt;br /&gt;(Kb/s)
    &lt;/td&gt;
        
    
    &lt;td&gt;
      &lt;a href=&#39;?type=in_load&#39;&gt;Входящая&lt;/a&gt;&lt;br /&gt; скорость &lt;br /&gt;за сессию&lt;br /&gt; (Kb/s)
    &lt;/td&gt;
        
    
    &lt;td&gt;
      &lt;a href=&#39;?type=out_load&#39;&gt;Исходящая&lt;/a&gt;&lt;br /&gt; скорость &lt;br /&gt;за сессию&lt;br /&gt; (Kb/s)
    &lt;/td&gt;
  &lt;/tr&gt;&#34;;
  $out_speed_sum=0;$out_load_sum=0;
  $in_speed_sum=0;
  $str=&#39;&#39;;$str1=&#39;&#39;;
  while ($row = mysql_fetch_array($result, MYSQL_ASSOC)) {
  $out_speed=ceil($row[out_speed]/(1024));
   $in_speed=ceil($row[in_speed]/(1024));
  
  $in=ceil($row[out_last]/(1024*1024));
  $out=ceil($row[in_last]/(1024*1024));
  
  $in_load=ceil($row[in_load]/(1024));
  $all_speed=ceil($row[all_speed]/(1024));
  $out_load=ceil($row[out_load]/(1024));
  $all=ceil($row[all_last]/(1024*1024));
  
  if(($row[ip4]!=&#39;10.200.205.2&#39;) ){
  $out_speed_sum=$out_speed_sum+$out_speed;
  $out_load_sum+=$out_load;
  $in_sum+=$in;
   $all_speed_sum+=$all_speed;
  $in_speed_sum=$in_speed_sum+$in_speed;
  $in_load_sum+=$in_load;
  $out_sum+=$out;
  $all_sum+=$all;
  
  $str.= &#34;
  
  &lt;tr&gt;
    &lt;td&gt;
      &#34;.$row[&#39;gid&#39;].&#34;&lt;a href=&#39;?type=packet&amp;#038;gid=&#34;.$row[&#39;gid&#39;].&#34;&#39;&gt;&#34;.$row[packet].&#34;&lt;a&gt;&lt;/td&gt;
          
      
      &lt;td&gt;
        &lt;a target=\&#34;_blank\&#34; href=\&#34;https://home/abills/admin/index.cgi?index=7&amp;#038;search=1&amp;#038;type=11&amp;#038;LOGIN_EXPR=&#34;.$row[&#39;user&#39;].&#34;\&#34;&gt;&#34;.$row[&#39;user&#39;].&#34;&lt;/a&gt;
      &lt;/td&gt;
          
      
      &lt;td&gt;
        &#34;.($all_speed).&#34;Kbit/s
      &lt;/td&gt;
          
      
      &lt;td&gt;
        &#34;.$row[&#39;ip4&#39;].&#34;
      &lt;/td&gt;
           
      
      &lt;td&gt;
        &#34;.$row[&#39;interface&#39;].&#34;
      &lt;/td&gt;&#34;;
      
          //$str.= &#34;
      
      &lt;td&gt;
        &#34;.(ceil($row[&#39;speed_car_in&#39;]/(1024*1024))).&#34;Mbits / &#34;.ceil(($row[&#39;speed_car_out&#39;]/(1024*1024))).&#34;Mbits 
      &lt;/td&gt;&#34;;
          //ret_speed_(
          $str.= &#34;
      
      &lt;td&gt;
        &#34;.(ret_speed_($row[&#39;speed_car_in&#39;])).&#34; / &#34;.(ret_speed_($row[&#39;speed_car_out&#39;])).&#34;  
      &lt;/td&gt;&#34;;
      
          $str.= &#34;
      
      &lt;td&gt;
        all: &#34;.($all).&#34;Mb/ in:&#34;.$in.&#34;Mb /out:&#34;.$out.&#34;Mb
      &lt;/td&gt;
          
      
      &lt;td&gt;
        &#34;.$in_speed.&#34;Kb/s
      &lt;/td&gt;
          
      
      &lt;td&gt;
        &#34;.$out_speed.&#34;Kb/s
      &lt;/td&gt;
          
      
      &lt;td&gt;
        &#34;.$in_load.&#34;
      &lt;/td&gt;
          
      
      &lt;td&gt;
        &#34;.$out_load.&#34;
      &lt;/td&gt;
        &lt;/tr&gt;&#34;;
      
      }
      
      if(($row[ip4]==&#39;10.200.205.2&#39;) ){
      
      $str1= &#34;
      
      &lt;tr&gt;
        &lt;td&gt;
          &lt;a href=&#39;?type=packet&amp;#038;gid=&#34;.$row[&#39;gid&#39;].&#34;&#39;&gt;&#34;.$row[packet].&#34;&lt;a&gt;&lt;/td&gt;
              
          
          &lt;td&gt;
            &#34;.$row[&#39;user&#39;].&#34;
          &lt;/td&gt;
              
          
          &lt;td&gt;
            &#34;.($all_speed).&#34;Kb/s
          &lt;/td&gt;
              
          
          &lt;td&gt;
            &#34;.$row[&#39;ip4&#39;].&#34;
          &lt;/td&gt;
               
          
          &lt;td&gt;
            &#34;.$row[&#39;interface&#39;].&#34;
          &lt;/td&gt;
               
          
          &lt;td&gt;
            &#34;.($row[&#39;speed_car_in&#39;]/1024).&#34;Kbits / &#34;.($row[&#39;speed_car_out&#39;]/1024).&#34;Kbits 
          &lt;/td&gt;
              
          
          &lt;td&gt;
            all: &#34;.($all).&#34;Mb/ in:&#34;.$in.&#34;Mb /out:&#34;.$out.&#34;Mb
          &lt;/td&gt;
              
          
          &lt;td&gt;
            &#34;.$in_speed.&#34;Kb/s
          &lt;/td&gt;
              
          
          &lt;td&gt;
            &#34;.$out_speed.&#34;Kb/s
          &lt;/td&gt;
              
          
          &lt;td&gt;
            &#34;.$in_load.&#34;
          &lt;/td&gt;
              
          
          &lt;td&gt;
            &#34;.$out_load.&#34;
          &lt;/td&gt;
            &lt;/tr&gt;&#34;;
          }
          }
          echo $str1;
          echo $str;
          echo &#34;
          
          &lt;tr&gt;
            &lt;td&gt;
              Итог:
            &lt;/td&gt;
                    
            
            &lt;td&gt;
              
            &lt;/td&gt;
                    
            
            &lt;td&gt;
              &#34;.($all_speed_sum).&#34;Kb/s
            &lt;/td&gt;
                    
            
            &lt;td&gt;
              ip
            &lt;/td&gt;
                    
            
            &lt;td&gt;
              interface
            &lt;/td&gt;
                    
            
            &lt;td&gt;
              all: &#34;.($all_sum).&#34;Mb/ in:&#34;.$in_sum.&#34;Mb /out:&#34;.$out_sum.&#34;Mb
            &lt;/td&gt;
                    
            
            &lt;td&gt;
              
            &lt;/td&gt;
                     
            
            &lt;td&gt;
              &#34;.$in_speed_sum.&#34;Kb/s
            &lt;/td&gt;
                     
            
            &lt;td&gt;
              &#34;.$out_speed_sum.&#34;Kb/s
            &lt;/td&gt;
                     
            
            &lt;td&gt;
              &#34;.$in_load_sum.&#34;
            &lt;/td&gt;
            
            &lt;td&gt;
              &#34;.$out_load_sum.&#34;
            &lt;/td&gt;
                      
          &lt;/tr&gt;&#34;;
          
          echo &#34;&lt;/table&gt;&#34;;
          mysql_close($link);
          ?&gt;
          
          
          
          &lt;?

?&gt;
          &lt;/CENTER&gt;
          
          
          &lt;?
include(&#34;bottom.php&#34;);
?&gt;
          
          &lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>privat24.php — скрипт позволяющий смотреть состояние добавленых в базу Фриинибса карточек VISA/MasterCARD от Приватбанка</title>
      <link>http://b-comm.ru/billing/privat24-php-%D1%81%D0%BA%D1%80%D0%B8%D0%BF%D1%82-%D0%BF%D0%BE%D0%B7%D0%B2%D0%BE%D0%BB%D1%8F%D1%8E%D1%89%D0%B8%D0%B9-%D1%81%D0%BC%D0%BE%D1%82%D1%80%D0%B5%D1%82%D1%8C-%D1%81%D0%BE%D1%81%D1%82</link>
      <pubDate>Sat, 14 Jan 2012 22:19:29 +0000</pubDate>
      
      <guid>http://b-comm.ru/billing/privat24-php-%D1%81%D0%BA%D1%80%D0%B8%D0%BF%D1%82-%D0%BF%D0%BE%D0%B7%D0%B2%D0%BE%D0%BB%D1%8F%D1%8E%D1%89%D0%B8%D0%B9-%D1%81%D0%BC%D0%BE%D1%82%D1%80%D0%B5%D1%82%D1%8C-%D1%81%D0%BE%D1%81%D1%82</guid>
      <description>&lt;p&gt;privat24.php — скрипт позволяющий смотреть состояние добавленых в базу Фриинибса карточек VISA/MasterCARD от Приватбанка&lt;/p&gt;

&lt;p&gt;Смотреть дамп базы данных тут: &lt;a href=&#34;http://b-comm.ru/billing/freenibs-database-sql-dump&#34;&gt;http://b-comm.ru/billing/freenibs-database-sql-dump&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;pre lang=&#34;php&#34;&gt;&lt;?
$TOP = &#34; Карточки Клиентов&#34;;
$META = &#34;&lt;META HTTP-EQUIV=\&#34;Cache-Control\&#34; CONTENT=\&#34;no-cache\&#34;&gt;\n&amp;lt;META HTTP-EQUIV=\&#34;Pragma\&#34; CONTENT=\&#34;no-cache\&#34;&gt;&#34;;

include(&#34;top.php&#34;);
include(&#34;class.loggin.php&#34;);
$log = new Logging();
$log-&gt;setfile(&#34;privar24.log.html&#34;);
echo &#34;

&lt;a href=&#39;privar24.log.html&#39;&gt;Данные по операциям&lt;/a&gt;&#34;;
?&gt;


&lt;CENTER&gt;
  &lt;?php
function quote_smart($value)
{
    // если magic_quotes_gpc включена - используем stripslashes
    if (get_magic_quotes_gpc()) {
        $value = stripslashes($value);
    }
    // Если переменная - число, то экранировать её не нужно
    // если нет - то окружем её кавычками, и экранируем
    if (!is_numeric($value)) {
        $value = mysql_real_escape_string($value);
    }
    return $value;
}


/* коннект к БД - меняем на свое */
$link = mysql_connect(&#39;10.200.205.224&#39;, &#39;freenibs&#39;, &#39;freenibs&#39;);
if (!$link) {
    die(&#39;Could not connect: &#39; . mysql_error());
}

mysql_select_db(&#34;freenibs&#34;);
// Выбираем дни за которые показывать 
$card_id=$_GET[&#39;id&#39;];
switch($_GET[&#39;act&#39;]){
    case &#34;delete&#34;:
            if($card_id&gt;0){
                  $q=&#34;DELETE FROM  `privat24` WHERE `id`=&#34;.quote_smart($card_id).&#34; LIMIT 1&#34;;
                  //echo $q;
                  $log-&gt;lwrite(&#39;Удалена карта # &#39;.$card_id.&#39; user:&#39;.$_GET[&#39;user&#39;].&#39; serial:&#39;.$_GET[&#39;card&#39;].&#34; 
  
  &lt;br /&gt;\n&#34;);
  
                  mysql_query($q);
              }
              break;
      case &#34;activ&#34;:
               if($card_id&gt;0){
                    $q=&#34;UPDATE `privat24` SET `status`=&#39;1&#39; WHERE `id`=&#34;.quote_smart($card_id).&#34; LIMIT 1&#34;;
                    $log-&gt;lwrite(&#39;Активирована карта # &#39;.$card_id.&#34;&lt;br /&gt;\n&#34;);
                     mysql_query($q);
               }
               break;
  
      case &#34;deactiv&#34;:
               if($card_id&gt;0){
                    $q=&#34;UPDATE `privat24` SET `status`=&#39;0&#39; WHERE `id`=&#34;.quote_smart($card_id).&#34; LIMIT 1&#34;;
                     mysql_query($q);
                     $log-&gt;lwrite(&#39;Деактивирована карта # &#39;.$card_id.&#34;&lt;br /&gt;\n&#34;);
  
               }
               break;
  
  }
  $q=&#34;SELECT * FROM `privat24` ORDER BY `status`,`uid`,`t` ASC &#34;;
  $q=&#34;SELECT * FROM `privat24` ORDER BY `status`  DESC &#34;;
  
    $result = mysql_query($q);
    //$days=array();
    $i=0;
  echo &#34;
  
  &lt;table border=&#39;1&#39;&gt;
    &lt;td&gt;
      N
    &lt;/td&gt;
    
    &lt;td&gt;
      user
    &lt;/td&gt;
    
    &lt;td&gt;
      card
    &lt;/td&gt;
    
    &lt;td&gt;
      time
    &lt;/td&gt;
    
    &lt;td&gt;
      action
    &lt;/td&gt;
    
    &lt;td&gt;
      status
    &lt;/td&gt;&#34;;
    
    while($row = mysql_fetch_array($result, MYSQL_ASSOC)){
        $i++;
        $s=$row[&#39;start&#39;];
        $t=$row[&#39;stop&#39;];
        $user=$row[&#39;uid&#39;];
        if($row[&#39;status&#39;]==0)
            $row[&#39;status&#39;]=&#39;не активно&#39;;
        else
                 $row[&#39;status&#39;]=&#39;активно&#39;;
        echo &#34; 
    
    &lt;tr&gt;
      &lt;td&gt;
        $i
      &lt;/td&gt;
      
      &lt;td&gt;
        $user
      &lt;/td&gt;
                      
      
      &lt;td&gt;
        $s&#34;.&#34;********&#34;.$t.&#34;
      &lt;/td&gt;
                      
      
      &lt;td&gt;
        &#34;.$row[&#39;t&#39;].&#34;
      &lt;/td&gt;
                      
      
      &lt;td&gt;
        &amp;lt;a href=&#39;?act=delete&amp;id=&#34;.$row[&#39;id&#39;].&#34;&amp;user=&#34;.$user.&#34;&amp;card=&#34;.$s.&#34;_____&#34;.$t.&#34;&#39;&gt;Удалить&amp;lt;/a&gt;
                        / / &amp;lt;a href=&#39;?act=activ&amp;id=&#34;.$row[&#39;id&#39;].&#34;&amp;user=&#34;.$user.&#34;&amp;card=&#34;.$s.&#34;_____&#34;.$t.&#34;&#39;&gt;Активировать&amp;lt;/a&gt;
                        / /  &amp;lt;a href=&#39;?act=deactiv&amp;id=&#34;.$row[&#39;id&#39;].&#34;&amp;user=&#34;.$user.&#34;&amp;card=&#34;.$s.&#34;_____&#34;.$t.&#34;&#39;&gt;Деактивировать&amp;lt;/a&gt;
      &lt;/td&gt;
                      
      
      &lt;td&gt;
        &#34;.$row[&#39;status&#39;].&#34;
      &lt;/td&gt;
      
                 
    &lt;/tr&gt; &#34;;
    }
    echo &#34;
  &lt;/table&gt;&#34;;
  mysql_close($link);
  ?&gt;
  
  
  
  &lt;?

?&gt;
  
&lt;/CENTER&gt;


&lt;?
include(&#34;bottom.php&#34;);
?&gt;

&lt;/pre&gt;

&lt;pre lang=&#34;php&#34;&gt;class.loggin.php
&lt;?php
class Logging{
  // define log file
  private $log_file = &#39;logfile_cccccc.txt&#39;;
  // define file pointer
  private $fp = null;
  // write message to the log file
  public function setfile($filename){
        $this-&gt;log_file=$filename;
  }
  public function lwrite($message){
    // if file pointer doesn&#39;t exist, then open log file
    if (!$this-&gt;fp) $this-&gt;lopen();
    // define script name
    $script_name = pathinfo($_SERVER[&#39;PHP_SELF&#39;], PATHINFO_FILENAME);
    // define current time
    $time = date(&#39;H:i:s&#39;);
    // write current time, script name and message to the log file
    fwrite($this-&gt;fp, &#34;$time ($script_name) $message\n&#34;);
  }
  // open log file
  private function lopen(){
    // define log file path and name
    $lfile = $this-&gt;log_file;
    // define the current date (it will be appended to the log file name)
    $today = date(&#39;Y-m-d&#39;);
    // open log file for writing only; place the file pointer at the end of the file
    // if the file does not exist, attempt to create it
    $this-&gt;fp = fopen($lfile, &#39;a&#39;) or exit(&#34;Can&#39;t open $lfile!&#34;);
  }
}
?&gt;

&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>Биллинговая система (billing system) 2011 &amp;#8212; Эволюция систем учета трафика в Интернет за 6-ть лет</title>
      <link>http://b-comm.ru/billing/%D0%B1%D0%B8%D0%BB%D0%BB%D0%B8%D0%BD%D0%B3%D0%BE%D0%B2%D0%B0%D1%8F-%D1%81%D0%B8%D1%81%D1%82%D0%B5%D0%BC%D0%B0-billing-system-2011-%D1%8D%D0%B2%D0%BE%D0%BB%D1%8E%D1%86%D0%B8%D1%8F-%D1%81%D0%B8</link>
      <pubDate>Mon, 17 Jan 2011 11:29:27 +0000</pubDate>
      
      <guid>http://b-comm.ru/billing/%D0%B1%D0%B8%D0%BB%D0%BB%D0%B8%D0%BD%D0%B3%D0%BE%D0%B2%D0%B0%D1%8F-%D1%81%D0%B8%D1%81%D1%82%D0%B5%D0%BC%D0%B0-billing-system-2011-%D1%8D%D0%B2%D0%BE%D0%BB%D1%8E%D1%86%D0%B8%D1%8F-%D1%81%D0%B8</guid>
      <description>&lt;h1 id=&#34;биллинговая-система-2011-8212-эволюция-систем-учета-трафика-в-интернет-за-6-ть-лет&#34;&gt;Биллинговая система 2011 &amp;#8212; Эволюция систем учета трафика в Интернет за 6-ть лет&lt;/h1&gt;

&lt;p&gt;Короткие и логичные выводы по пунктам в конце, а сейчас рок-н-ролл)))&lt;/p&gt;

&lt;h2 id=&#34;2005-2006-время-freenibs&#34;&gt;2005-2006 время FreeNIBS )))&lt;/h2&gt;

&lt;p&gt;Сказать по правде с FreeNIBS Я очень долго мучался пока не запустил биллинг, а для этого Я походил по всем возможным граблям и невозможным(то есть Я их сам сочинил))).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;В 2006-2008 году:&lt;/strong&gt; Мы еще сидели на 64-128Кбитных безлимитных пакетах (сладкие безлимы))), причём большая часть людей на помегабайтном тарифе (помегабайтке). Биллинговая типичного провайдера состояла из пресловутых FreeBSD или Linux или же Windows Server у крутых парней был Solaris :).&lt;/p&gt;

&lt;p&gt;Но потом всё резко начало меняться&amp;#8230;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;В том же 2008 году стало ясно, что &amp;#171;умные&amp;#187; (а вообще &amp;#8212; управляемые свичи) рулят!&lt;/p&gt;

&lt;p&gt;На тот момент пошёл отток б/у Cisco, ZyXel, Planet, 3COM, etc. На лице появлялась улыбка &amp;#8212; Вот ОНО, СЧАСТЬЕ на нашей улице!!! Монтажники в робах тягали оптику, сварочный аппарат для &amp;#171;оптики&amp;#187; уже не был в диковинку, а некоторые на этом начали подниматься. Хотя всё еще кто-то использовал переходники на оптику без пайки 😉&lt;/p&gt;

&lt;p&gt;Нам казалась, что настал золотой век провайдеров)))&lt;/p&gt;

&lt;p&gt;Цены резко упали вниз и в 2008 году доступно было ЦЕЛЫХ 256Кбит/с простым украинцем.&lt;/p&gt;

&lt;p&gt;Я использовал всё это время на своём стареньком сервере Целероне 1.6 512МБ FreeBSD 6.0 потом FreeBSD 6.2 и FreeRadius 1.1.0 + FreeNIBS 1.x. Дальше сервера доступа и биллинговый сервер &amp;#8212; разделились, вот он &lt;a href=&#34;http://wel.org.ua/lang/bras-на-freebsd-freenibs&#34;&gt;мой брас на freeBSD 7.2&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;прикол-со-старой-freenibs-1-x-и-новой-версией-freenibs-2-x&#34;&gt;Прикол со старой freeNibs 1.x и новой версией FreeNIBS 2.x&lt;/h3&gt;

&lt;p&gt;Итак у Меня сейчас FreeNIBS интегрированный в FreeRADIUS 1.1.0 а собран аж в апреле 2007 года.&lt;/p&gt;

&lt;pre lang=&#34;bash&#34;&gt;#/usr/local/sbin/radiusd -v
radiusd: FreeRADIUS Version 1.1.0, for host , built on Apr 27 2007 at 01:50:14
Copyright (C) 2000-2003 The FreeRADIUS server project.
There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE.
You may redistribute copies of FreeRADIUS under the terms of the
GNU General Public License.
For more information about these matters, see the file named COPYRIGHT.
&lt;/pre&gt;

&lt;p&gt;Дело в том, что Я на радостях собрал FreeNIBS 2.0.x, прикрутил &amp;#171;новый&amp;#187; интерфейс и уехал. Но Мне начал звонить директор, дескать: &amp;#171;Что Ты наделал? Людям деньги снимает по 100-200 грн за сессию!!!&amp;#187; В общем Я промучался 3-и часа и так и не выяснил почему такая лажа. было решено, что сервер просто напросто откатится на FreeNIBS первой ветки. Но боже мой Я совсем забыл какой FreeNIBS Я накатывал на какой FreeRADIUS.&lt;/p&gt;

&lt;p&gt;В общем с горем пополам на 9-ти или более вариациях Я закончил под утро. Лёг спать, а потом в ужасе не смог найти какой из вариантов Я засетапил)))&lt;/p&gt;

&lt;pre lang=&#34;bash&#34;&gt;#ls -la
total 16
drwxr-xr-x   7 root  wheel   512 Apr 25  2007 .
drwxr-xr-x  39 root  wheel  2560 Dec  5 11:37 ..
drwxr-xr-x  11 root  wheel   512 Apr 25  2007 1.1.9_radius1.1.0
drwxr-xr-x  10 root  wheel   512 Apr 25  2007 1.1.9_radius1.1.1
drwxr-xr-x  11 root  wheel   512 Apr 25  2007 1.1.9_radius1.1.4
drwxr-xr-x  12 root  wheel   512 Apr 24  2007 2.2.0_radius1.1.4
drwxr-xr-x  12 root  wheel   512 Apr 24  2007 3.0.0.b3_radius1.1.4

&lt;/pre&gt;

&lt;p&gt;В общем Я скрупулёзно копировал данные папки периодически Себе на винт &amp;#8212; переодически)))&lt;/p&gt;

&lt;p&gt;Потом с винта 6.2Гбайта в 2008 году Я перенёс на 30+Gb винт с помощью dump+restore.&lt;/p&gt;

&lt;pre lang=&#34;bash&#34;&gt;#fdisk
******* Working on device /dev/ad8 *******
parameters extracted from in-core disklabel are:
cylinders=155061 heads=16 sectors/track=63 (1008 blks/cyl)

Figures below won&#39;t work with BIOS for partitions not in cyl 1
parameters to be used for BIOS calculations are:
cylinders=155061 heads=16 sectors/track=63 (1008 blks/cyl)

Media sector size is 512
Warning: BIOS sector numbering starts with sector 1
Information from DOS bootblock is:
The data for partition 1 is:
sysid 165 (0xa5),(FreeBSD/NetBSD/386BSD)
    start 63, size 1044162 (509 Meg), flag 0
        beg: cyl 0/ head 1/ sector 1;
        end: cyl 64/ head 254/ sector 63
The data for partition 2 is:
sysid 165 (0xa5),(FreeBSD/NetBSD/386BSD)
    start 1044225, size 71665965 (34993 Meg), flag 80 (active)
        beg: cyl 65/ head 0/ sector 1;
        end: cyl 1023/ head 254/ sector 63
The data for partition 3 is:
sysid 165 (0xa5),(FreeBSD/NetBSD/386BSD)
    start 72710190, size 83586195 (40813 Meg), flag 0
        beg: cyl 1023/ head 255/ sector 63;
        end: cyl 1023/ head 254/ sector 63
The data for partition 4 is:
&amp;lt;UNUSED&gt;
&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;За 2008-2009&lt;/strong&gt; год скорость увеличилась с 256Кбит/с до 10Мбит/с.&lt;/p&gt;

&lt;p&gt;Я, нет &amp;#8212; мой старый Целерон вздохнул с облегчением, когда Я вынес на новенький Атлон 4600++ + настоящая сетевай карта Intel Desctop PRO Gigabit)))&lt;/p&gt;

&lt;p&gt;Теперь у Меня гемора стала в 2-а раза больше, пока Я не освоил загрузку FreeBSD без зависимости от названия раздела.&lt;/p&gt;

&lt;p&gt;Правда Я часто когда был в отъезде говорил по телефону, что печатать &amp;#8212; а Мне говорили результат &amp;#8212; так и восстанавливали очень жестокие сбои подачи электричества)))&lt;/p&gt;

&lt;p&gt;В общем IP KVM switch &amp;#8212; это весчь)))&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;В 2008-2009-ом году Мне сильно поднадоела FreeNIBS&lt;/strong&gt; &amp;#8212; переписывать веб-интерфейс Я не хотел, так как Меня беспокоил падающий радиус, не обновлённая FreeBSD до 6.3, а потом и 6.4 и не радужные перспективы если это всё не запуститься, а Я за 400км и без бекапов.&lt;/p&gt;

&lt;h3 id=&#34;время-netflow&#34;&gt;Время NetFlow&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Я решил всё переписать используя netflow&lt;/strong&gt;. Взял С++ библиотеку для mysql, хранимые процедуры mysql 5.0.x и начал пытаться. Создал логику и всё такое. Но потом Я обнаружил, что труЪ способ снятия netflow прямо с нод mpd4.4 у Меня не заработал, и даже на mpd5.0 )))&lt;/p&gt;

&lt;p&gt;Я отложил все эти потуги и забил. Я еще пытался написать биллинг под FreeRADIUS. Так же пытался проинсталить или найти нормальный биллинг. Всё Мне попадалось что-то &amp;#171;не то&amp;#187;)))&lt;/p&gt;

&lt;p&gt;Уже после выхода mpd5.1 Я с радостью обнаружил работающую функцию экспорта NetFlow потока. Я подвесил сенсор и ждал, пока сервер пару раз не завис. Я сказал ХМ&amp;#8230;&lt;/p&gt;

&lt;p&gt;Я посчитал скорость роста траффика, и количество И/О операций. Так же Я сделал тестовый скрипт,который &amp;#171;расчитывал траффик и снимал деньги&amp;#187;. В общем Я был огорчён &amp;#8212; Нетфлоу был настолько &amp;#171;тяжёлым&amp;#187; &amp;#8212; до безобразия. Я еще удивлялся как у знакомого на сетке в 3-и раза больше не дохнет сервак. Как потом оказалось его КСЕОНЫ дохли раз за разом ))) Он еще в РРРtP соеденении считал отдельно локалку+инет безлимитный)))&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;В 2009-2010&lt;/strong&gt; Я несколько раз пробовал abills, но Меня тошнило от пёрла.&lt;/p&gt;

&lt;p&gt;С выходом новой фичи для Меня в mpd5.2 ext acc Я захотел реализовать биллинг средствами скриптов.&lt;/p&gt;

&lt;p&gt;&lt;a rel=&#34;nofollow&#34; href=&#34;https://sourceforge.net/projects/mpd/forums/forum/44692/topic/3036343&#34;&gt;mpd 5 External authentication&lt;/a&gt; как было сказано надо выдавать:&lt;/p&gt;

&lt;pre lang=&#34;cpp&#34;&gt;USER_NT_HASH
USER_LM_HASH
RESULT:UNDEF
&lt;/pre&gt;

&lt;p&gt;Я помыкался, поискал как это сделано в abills&amp;#8217;е и забил)))&lt;/p&gt;

&lt;p&gt;Замаячила возможная продажа моей любимой сети)))&lt;/p&gt;

&lt;p&gt;Я работать стал в еще одной сети. На написание костылей времени не было.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Потом летом 2010&lt;/strong&gt; Я решил сделать свой биллинг на FreeRADIUS&amp;#8217;e.&lt;/p&gt;

&lt;p&gt;В принципе Я относительно быстро на последнем 2.х радиусе поднял сервер. Дальше Я подруби его к mpd 5.5 на freeBSD 7.2 и сделал небольшой PPTP/PPPoE сервер. начал писать морду.&lt;/p&gt;

&lt;p&gt;А потом стало реально понятно, что Мы будем скоро проданы в рабство &amp;#8212; так Я и забросил написание биллинга)))&lt;/p&gt;

&lt;h2 id=&#34;выводы&#34;&gt;Выводы&lt;/h2&gt;

&lt;p&gt;За 6-ть лет траффик шагнул, да нет &amp;#8212; взлетел на реактивной ракете просто на невероятные высоты. С помегабайтного Интернета с общей скоростью на 50 человек 64Кбит/с до 240Мбит/сек с динамическим шейпингом в зависимости от нагрузки канала и пределом в 100Мбит/с.&lt;/p&gt;

&lt;p&gt;Биллинг как прилип изначально FreeNIBS &amp;#8212; так Я им и пользовался на FreeBSD, хоть и железо было &amp;#8212; обычный старый компьютер, хоть жесткий диск &amp;#8212; был с бедами, хоть электричество отключали и потом до часу беды фиксились. Не останавливало то, что было переполнение 32bit-ых counter-ов и трафик больше 4-х Гбайт обнулялся &amp;#8212; Я костылём пофиксил)))&lt;/p&gt;

&lt;p&gt;В итоге Я реализовал FreeRadius + ipfw redirect на nginx, реализовал динамический шейпинг в зависимости от нагрузки. А всего-лишь навсего надо было победить в Себе лень и не мучаться со всем этим старьём)))&lt;/p&gt;

&lt;h2 id=&#34;будущее&#34;&gt;Будущее&lt;/h2&gt;

&lt;p&gt;Мы все знаем, что IPv4 доживает свой час.&lt;/p&gt;

&lt;p&gt;Что траффик считать &amp;#8212; неприлично, легче дать реальный ИП-к.&lt;/p&gt;

&lt;p&gt;НАТить &amp;#8212; позорно, ибо сервера больше перенапрягаются.&lt;/p&gt;

&lt;p&gt;И тем не менее будущее росийчких провайдеров с СОРМ-ом не сильно прельщает.&lt;/p&gt;

&lt;p&gt;Так же бешеный рост траффика просто поражает))) Мы &amp;#171;кору&amp;#187; меняли несколько раз, а &amp;#171;Им все мало&amp;#187;)))&lt;/p&gt;

&lt;p&gt;И это не учитывая, что у пользователей 10/100Мбит последней мили и 10-40% торрент трафика оседает в сети провайдера.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://electrobrand.ru/index.php&#34;&gt;Дрели и шлифмашины&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Как заставить окончательно перейти абонентов на другой тип подключения?</title>
      <link>http://b-comm.ru/billing/%D0%BA%D0%B0%D0%BA-%D0%B7%D0%B0%D1%81%D1%82%D0%B0%D0%B2%D0%B8%D1%82%D1%8C-%D0%BE%D0%BA%D0%BE%D0%BD%D1%87%D0%B0%D1%82%D0%B5%D0%BB%D1%8C%D0%BD%D0%BE-%D0%BF%D0%B5%D1%80%D0%B5%D0%B9%D1%82%D0%B8-%D0%B0</link>
      <pubDate>Fri, 31 Dec 2010 09:50:02 +0000</pubDate>
      
      <guid>http://b-comm.ru/billing/%D0%BA%D0%B0%D0%BA-%D0%B7%D0%B0%D1%81%D1%82%D0%B0%D0%B2%D0%B8%D1%82%D1%8C-%D0%BE%D0%BA%D0%BE%D0%BD%D1%87%D0%B0%D1%82%D0%B5%D0%BB%D1%8C%D0%BD%D0%BE-%D0%BF%D0%B5%D1%80%D0%B5%D0%B9%D1%82%D0%B8-%D0%B0</guid>
      <description>&lt;p&gt;Я уже писал &lt;a href=&#34;http://b-comm.ru/?p=69&#34;&gt;про Скрипт для сервера доступа mpd5: up-script для информирования абонентов&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Но это не сработает на 100% и тем более сразу.&lt;/p&gt;

&lt;p&gt;**Почему?&lt;/p&gt;

&lt;p&gt;** Да потому, что люди включают компьютер подключают Интернет и через х-минут начинают пользоваться. &lt;strong&gt;Они просто не увидят сообщение&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Что делать?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Показывать данное сообщение каждые х-минут!&lt;/p&gt;

&lt;pre lang=&#34;bash&#34;&gt;*/10    *   *   *   *   root /perevesti_vseh.php  2&gt;&amp;1&lt;/pre&gt;

&lt;p&gt;/perevesti_vseh.php&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;pre lang=&#34;php&#34; line=&#34;1&#34;&gt;#!/usr/local/bin/php                                                                                                                                                               
&lt;?php
//наша таблица в фаерволе из прошлого поста)))
//http://b-comm.ru/?p=69 - тут
$table_ipfw_for_warn_up=7;
$link = mysql_connect(&#39;10.1.1.1&#39;, &#39;freenibs&#39;, &#39;freenibs&#39;);
               
if (!$link) {                                                                                                                                                                      
            die(&#39;Could not connect: &#39; . mysql_error());                                                                                                                            
}                                                                                                                                               mysql_select_db(&#34;freenibs&#34;);
$q=&#34;SELECT `ip`                                                                                                                                                                    
FROM `actions`                                                                                                                                                                     
WHERE `terminate_cause` = &#39;Online&#39;&#34;;                                                                                                                                               
                                                                                                                                                                                   
$result = mysql_query($q);                                                                                                                                                         
$num_rows = mysql_num_rows($result);                                                                                                                                               
if($num_rows&gt;0){                                                                                                                                                                   
                                                                                                                                                                                   
                                                                                                                                                                                   
                                                                                                                                                                                   
         while ($row = mysql_fetch_array($result, MYSQL_ASSOC)) {                                                                                                                  
                 $userip=$row[&#39;ip&#39;];                                                                                                                                               
                 //echo &#34;session: &#34;.$unique_id.&#34; will rise :)\n&#34;;                                                                                                                  
                $last_line = system(&#39;/sbin/ipfw table &#39;.$table_ipfw_for_warn_up.&#39; add &#39;.$userip.&#34;&#34;, $retval);                                                                                                                                                                                                                                                         
         }                                                                                                                                                                         
                                                                                                                                                                                   
}                                                                                                                                                                                  
sleep(60);                                                                                                                                                                         
                                                                                                                                                                                   
                                                                                                                                                                                   
 $last_line = system(&#39;/sbin/ipfw table 7 flush&#39;, $retval);                                                                                                                         
                                                                                                                                                                                   
?&gt;                                                         
&lt;/pre&gt;

&lt;p&gt;Вот так вот просто)))&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Скрипт для логгирования мак-адресов пользователей</title>
      <link>http://b-comm.ru/billing/%D1%81%D0%BA%D1%80%D0%B8%D0%BF%D1%82-%D0%B4%D0%BB%D1%8F-%D0%BB%D0%BE%D0%B3%D0%B3%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F-%D0%BC%D0%B0%D0%BA-%D0%B0%D0%B4%D1%80%D0%B5%D1%81%D0%BE%D0%B2-%D0%BF</link>
      <pubDate>Tue, 15 Dec 2009 00:23:33 +0000</pubDate>
      
      <guid>http://b-comm.ru/billing/%D1%81%D0%BA%D1%80%D0%B8%D0%BF%D1%82-%D0%B4%D0%BB%D1%8F-%D0%BB%D0%BE%D0%B3%D0%B3%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F-%D0%BC%D0%B0%D0%BA-%D0%B0%D0%B4%D1%80%D0%B5%D1%81%D0%BE%D0%B2-%D0%BF</guid>
      <description>&lt;p&gt;Данный скрипт и его копии на серверах доступа и роутерах стоят, что бы сливать инфу о мак-адресах в базу&amp;#8230;&lt;/p&gt;

&lt;p&gt;Эти данные потом используется другими скриптами. Отсюда видно кто куда и зачем )))&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;cat /etc/crontab|grep arp&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre lang=&#34;bash&#34;&gt;*/10    *       *       *       *       root /arpwatch.sh  &gt; /dev/null
&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;cat /arpwatch.sh&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre lang=&#34;bash&#34; line=&#34;1&#34;&gt;#!/usr/local/bin/bash
#для моих реальников - начинаются с 91.203., но это не правильно)))
#тут надо было использовать egrep
#в общем не пишите так скрипты))) 
#@www.isp.pl.ua
############

arp -a -n | tr &#39;(&#39; &#39; &#39; | tr &#39;)&#39; &#39; &#39; | awk &#39;{print$2&#34;K&#34;$4&#34;L&#34;}&#39; | grep 10. | grep -v &#34;incomplet&#34; | grep -v &#34;ff:ff&#34;|grep -v &#34;91.203.&#34;&gt;/arpwatch.table

arp -a -n | tr &#39;(&#39; &#39; &#39; | tr &#39;)&#39; &#39; &#39; | awk &#39;{print$2,$4}&#39; | grep 10. | grep -v &#34;incomplet&#34; | grep -v &#34;ff:ff&#34;|grep -v &#34;91.203.&#34;&gt;/arpwatch.table

arp -a -n | tr &#39;(&#39; &#39; &#39; | tr &#39;)&#39; &#39; &#39; | awk &#39;{print$2,$4}&#39; | grep 10. | grep -v &#34;incomplet&#34; | grep -v &#34;ff:ff&#34;|grep -v &#34;91.203.&#34;&gt;/arpwatch.table
arp -a -n | tr &#39;(&#39; &#39; &#39; | tr &#39;)&#39; &#39; &#39; | awk &#39;{print$2,$4}&#39; | grep &#34;172.168&#34; | grep -v &#34;incomplet&#34; | grep -v &#34;ff:ff&#34;&gt;&gt;/arpwatch.table
arp -a -n | tr &#39;(&#39; &#39; &#39; | tr &#39;)&#39; &#39; &#39; | awk &#39;{print$2,$4}&#39; | grep &#34;91.&#34; | grep -v &#34;incomplet&#34; | grep -v &#34;ff:ff&#34;&gt;&gt;/arpwatch.table

/arpwatch.php
&lt;/pre&gt;

&lt;pre lang=&#34;php&#34; line=&#34;1&#34;&gt;#!/usr/local/bin/php
&lt;?php
include_once(&#34;/engine.php&#34;);
$a=new db_mysql();
$a-&gt;init(&#34;10.1.1.1&#34;,&#34;arpwatch&#34;,&#34;arpwatch&#34;,&#34;freenibs&#34;);
$f=&#34;/arpwatch.table&#34;;

$f_array=file($f);
$n=count($f_array);
for ($i=1; $i&amp;lt;$n;$i++)
{
            $str=explode(&#34; &#34;,$f_array[$i]);
$q=&#34;INSERT INTO `arpwatch` (`ip`,`arp`) VALUES (&#39;&#34;.quote_smart(trim($str[0])).&#34;&#39;,&#39;&#34;.quote_smart(trim($str[1])) .&#34;&#39;) ON DUPLICATE KEY UPDATE `ip`=&#39;&#34;.quote_smart(trim($str[0])).&#34;&#39;,`date`=NOW()&#34;;
//          echo $q.&#34;\n&#34;;
            $a-&gt;query($q);
}

$a-&gt;close_db();
?&gt;
&lt;/pre&gt;

&lt;pre lang=&#34;php&#34; line=&#34;1&#34;&gt;&lt;?php
function quote_smart($value)
{

    if (get_magic_quotes_gpc()) {
        $value = stripslashes($value);
    }

    if (!is_numeric($value)) {
        $value = mysql_real_escape_string($value);
    }
    return $value;
}



class db_mysql{
    public $query;
    public $host;
    public $user;
    public $passw;
    public $db;
    public $link;
    public $res;
    public $temp_q;
    public $num;
    public $ar;
        public function  __construct ()
        {
                $this-&gt;query=NULL;
                $this-&gt;ar=array();
        }

        function __destruct()
        {
                @mysql_close($this-&gt;link);
        }

        public function  init($HOST,$USER,$PASSW,$DB)
        {
                self::set_host($HOST);
                self::set_user($USER);
                self::set_passw($PASSW);
                self::set_db($DB);
                $this-&gt;query=NULL;
                $this-&gt;ar=array();
                $this-&gt;link=@mysql_connect($this-&gt;host,$this-&gt;user, $this-&gt;passw)or die(ERR1);
                mysql_select_db($this-&gt;db,$this-&gt;link) or die(ERR2);
                //$q=&#34;SET NAMES utf8&#34;;
                self::query($q);
        }

        function connect(){
                $this-&gt;query=NULL;
                $this-&gt;ar=array();
                $this-&gt;link=@mysql_connect($this-&gt;host,$this-&gt;user, $this-&gt;passw)or die(ERR1);
                mysql_select_db($this-&gt;db,$this-&gt;link) or die(ERR2);
        }

        public function set_host($host){$this-&gt;host=$host;}
        public function set_user($user){$this-&gt;user=$user;}
        public function set_passw($passw){$this-&gt;passw=$passw;}
        public function set_db($db){$this-&gt;db=$db;}

        public function  query($q){
                $this-&gt;query=mysql_db_query($this-&gt;db,$q,$this-&gt;link);//or die(ERR3);
        }
        public function num_rows(){
                $this-&gt;num=mysql_num_rows($this-&gt;query);
                return $this-&gt;num;
        }
        public function  fetch_row(){
                $this-&gt;res=mysql_fetch_row($this-&gt;query);
                return $this-&gt;res;
        }
        public function  fetch_array(){
                $this-&gt;res=mysql_fetch_array($this-&gt;query); //or die(mysql_error());
                return $this-&gt;res;
        }

        public function db_select()
        {
                mysql_select_db($this-&gt;db,$this-&gt;link) or die(ERR2);
        }
        public function free_result()
        {
                mysql_free_result($this-&gt;res);
        }

        public function close_db()
        {
                mysql_close($this-&gt;link);
        }

}


?&gt;

&lt;/pre&gt;

&lt;p&gt;dump:&lt;/p&gt;

&lt;pre lang=&#34;sql&#34; line=&#34;1&#34;&gt;-- phpMyAdmin SQL Dump
-- version 3.1.2
-- http://www.phpmyadmin.net
--

SET SQL_MODE=&#34;NO_AUTO_VALUE_ON_ZERO&#34;;

--
-- База данных: `freenibs`
--

-- --------------------------------------------------------

--
-- Структура таблицы `arpwatch`
--

DROP TABLE IF EXISTS `arpwatch`;
CREATE TABLE IF NOT EXISTS `arpwatch` (
  `id` int(255) NOT NULL auto_increment,
  `ip` varchar(255) NOT NULL,
  `arp` varchar(255) NOT NULL,
  `date` timestamp NOT NULL default &#39;0000-00-00 00:00:00&#39; on update CURRENT_TIMESTAMP,
  PRIMARY KEY  (`id`),
  UNIQUE KEY `ip` (`ip`,`arp`)
) ENGINE=MyISAM  DEFAULT CHARSET=latin1 AUTO_INCREMENT=4648 ;

--
-- Дамп данных таблицы `arpwatch`
--

INSERT INTO `arpwatch` (`id`, `ip`, `arp`, `date`) VALUES(4, &#39;10.1.5.1&#39;, &#39;00:02:b3:1e:01:e1&#39;, &#39;2009-12-24 02:27:14&#39;);
&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>Скрипт /usr/local/etc/mpd5/link-up для mpd5 срабатывающий при подключении</title>
      <link>http://b-comm.ru/billing/%D1%81%D0%BA%D1%80%D0%B8%D0%BF%D1%82-usrlocaletcmpd5link-up-%D0%B4%D0%BB%D1%8F-mpd5-%D1%81%D1%80%D0%B0%D0%B1%D0%B0%D1%82%D1%8B%D0%B2%D0%B0%D1%8E%D1%89%D0%B8%D0%B9-%D0%BF%D1%80%D0%B8-%D0%BF%D0%BE</link>
      <pubDate>Sat, 12 Sep 2009 23:32:22 +0000</pubDate>
      
      <guid>http://b-comm.ru/billing/%D1%81%D0%BA%D1%80%D0%B8%D0%BF%D1%82-usrlocaletcmpd5link-up-%D0%B4%D0%BB%D1%8F-mpd5-%D1%81%D1%80%D0%B0%D0%B1%D0%B0%D1%82%D1%8B%D0%B2%D0%B0%D1%8E%D1%89%D0%B8%D0%B9-%D0%BF%D1%80%D0%B8-%D0%BF%D0%BE</guid>
      <description>&lt;p&gt;Скрипт /usr/local/etc/mpd5/link-up для mpd5 срабатывающий при подключении.&lt;/p&gt;

&lt;p&gt;При подключении:&lt;/p&gt;

&lt;p&gt;Первым SELECT&amp;#8217;ом из базы Мы смотрим &amp;#8212; Натить ли пользователя? То есть если emty или 0 пользователей &amp;#8212; не натим.&lt;/p&gt;

&lt;p&gt;Вторым SELECT&amp;#8217;ом из базы Мы смотрим &amp;#8212; Надо ли менять скорость пользователя, если надо &amp;#8212; меняем. У меня это сделано на ipfw pipe, но думаю перейти на ng_car:)))&lt;/p&gt;

&lt;p&gt;Третим SELECT&amp;#8217;ом из базы Мы &amp;#8212; добавляем запись в базу данных, что пользователь подключился.&lt;/p&gt;

&lt;p&gt;С помощью данного скрипта Я решал следующую проблему:&lt;/p&gt;

&lt;p&gt;Быстродействие &amp;#8212; на php тормозило. Хотя может и руки из жо)))&lt;/p&gt;

&lt;p&gt;Подключается скрипт в /usr/local/etc/mpd5/mpd.conf так вот, в секцию с вашим сервером (pptp/pppoe/etc)&lt;/p&gt;

&lt;pre lang=&#34;php&#34;&gt;set iface up-script /usr/local/etc/mpd5/
&lt;/pre&gt;

&lt;p&gt;Обязательно примите к сведению, что запрос&lt;/p&gt;

&lt;pre lang=&#34;sql&#34; line=&#34;1&#34;&gt;SELECT * FROM `all` WHERE `ip` not LIKE &#39;91.%&#39; 
&lt;/pre&gt;

&lt;p&gt;а именно его часть: `ip` not LIKE &amp;#8217;91.%&amp;#8217; добавлен, что бы НАТ не включался для реальных IP-адресов.&lt;/p&gt;

&lt;p&gt;У Вас могут быть другие адреса )))&lt;/p&gt;

&lt;p&gt;main.cpp :&lt;/p&gt;

&lt;pre lang=&#34;cpp&#34; line=&#34;1&#34;&gt;#include &amp;lt;QtCore&gt;
#include &amp;lt;QCoreApplication&gt;
#include &amp;lt;QtSql&gt;
#include &amp;lt;iostream&gt;
#include &amp;lt;cstdlib&gt;
#include &amp;lt;iomanip&gt;
#include &amp;lt;stdio.h&gt;
#include &amp;lt;stdlib.h&gt;
#include &amp;lt;string.h&gt;
#include &amp;lt;time.h&gt;
using namespace std;


#define SQLDRIVER &#34;QMYSQL&#34;
#define HOST &#34;10.1.1.1&#34;
#define DBNAME &#34;bezlim&#34;
#define USER &#34;bezlim&#34;
#define PASSWORD &#34;bezlim&#34;

int main(int argc, char *argv[])
{
    QCoreApplication a(argc, argv);

    QTextCodec *codec = QTextCodec::codecForName(&#34;CP1251&#34;);
    QTextCodec::setCodecForTr(codec);
    QTextCodec::setCodecForCStrings(codec);

    QSqlDatabase db = QSqlDatabase::addDatabase(SQLDRIVER);

    if( !db.isDriverAvailable(SQLDRIVER))
    {

    }


    db.setHostName(HOST);
    db.setDatabaseName(DBNAME);
    db.setUserName(USER);
    db.setPassword(PASSWORD);
    //db.setPort(3306);
    bool ok=db.open();
    if(ok!=true){
        std::cout&amp;lt;&amp;lt;&#34;unable connec&#39;t&#34;;
        exit(1);
    }
     QString exec_this;
     int bw1;

     QString ip_argv;
     ip_argv=argv[4];

     //qDebug()&amp;lt;&amp;lt;ip_argv;

     QSqlQuery query(&#34;SELECT * FROM `all` WHERE `ip` not LIKE &#39;91.%&#39; AND `activ`=&#39;y&#39; AND `ip`=&#39;&#34;+ip_argv+&#34;&#39; LIMIT 1&#34;);
     while (query.next()) {
         QString id = query.value(5).toString();

         QString ip = query.value(0).toString();
         QString in = query.value(3).toString();
         QString out = query.value(4).toString();
         QString n = query.value(1).toString();
         bw1 =query.value(3).toInt();
         QString bw2 =query.value(3).toString();
//pfctl - это закомментированная часть для pf nat
//      exec_this=&#34;/sbin/pfctl -tinat -Tadd &#34;;
//      exec_this +=ip;
//      qDebug()&amp;lt;&amp;lt;exec_this&amp;lt;&amp;lt;endl;

        exec_this =&#34;/sbin/ipfw table 1 add &#34;;
        exec_this +=ip;

        system(exec_this.toStdString().c_str());


    }
        qDebug()&amp;lt;&amp;lt;ip_argv&amp;lt;&amp;lt;endl;

        qDebug()&amp;lt;&amp;lt;exec_this&amp;lt;&amp;lt;endl;

     QSqlQuery query11(&#34;SELECT * FROM `all` WHERE `activ`=&#39;y&#39; AND `ip`=&#39;&#34;+ip_argv+&#34;&#39; LIMIT 1&#34;);
     while (query11.next()) {
//pfctl это закомментированная часть для pf nat
//      exec_this=&#34;/sbin/pfctl -tinat -Tadd &#34;;
//      exec_this +=ip;
//      qDebug()&amp;lt;&amp;lt;exec_this&amp;lt;&amp;lt;endl;

         QString id = query11.value(5).toString();

         QString ip = query11.value(0).toString();
         QString in = query11.value(3).toString();
         QString out = query11.value(4).toString();
         QString n = query11.value(1).toString();
         bw1 =query11.value(3).toInt();
         QString bw2 =query11.value(3).toString();


      //Эта часть у Меня отвечает за выделение скорости. Я использовал ipfw pipe
        if(bw1&gt;0)
        {
            qint64 num = 0;
            QString num1;
            query.clear();
             QSqlQuery query(&#34;SELECT * FROM `freenibs`.`pipes` WHERE `freenibs`.`pipes`.`bw`=&#39;&#34;+bw2+&#34;&#39; LIMIT 1&#34;);
            //qDebug()&amp;lt;&amp;lt;&#34;SELECT `freenibs`.`pipes`.`n` FROM `freenibs`.`pipes` WHERE `freenibs`.`pipes`.`bw`=&#39;&#34;+bw2+&#34;&#39; LIMIT 1&#34;&amp;lt;&amp;lt;endl;
             while (query.next()) {
                    num = query.value(1).toInt();
                    num1 = query.value(1).toString();
                }
            query.clear();
            if(num&gt;0)
            {
                    //qDebug()&amp;lt;&amp;lt;&#34;NUM&gt;0|&#34;&amp;lt;&amp;lt;num1&amp;lt;&amp;lt;&#34;|&#34;&amp;lt;&amp;lt;endl;
                    exec_this =&#34;/sbin/ipfw pipe &#34;;
                    exec_this +=num1;
                    exec_this +=&#34; config mask dst-ip 0x000000ff bw &#34;;
                    exec_this +=bw2;
                    exec_this +=&#34;Kbit/s&#34;;
                    system(exec_this.toStdString().c_str());
                    //qDebug()&amp;lt;&amp;lt;exec_this&amp;lt;&amp;lt;endl;
                    exec_this =&#34;/sbin/ipfw table &#34;;
                    exec_this +=num1;
                    exec_this +=&#34; add &#34;;
                    exec_this +=ip;
                    system(exec_this.toStdString().c_str());
                    //qDebug()&amp;lt;&amp;lt;exec_this&amp;lt;&amp;lt;endl;
            }
            else
            {
                    QSqlQuery query1(&#34; SELECT MAX(`n`)+1  FROM `freenibs`.`pipes` &#34;);
                    //qDebug()&amp;lt;&amp;lt;num&amp;lt;&amp;lt;endl;
                    // qDebug()&amp;lt;&amp;lt;query1.lastError()&amp;lt;&amp;lt;endl;
                    // query.exec();
                     //qDebug()&amp;lt;&amp;lt;query1.lastError()&amp;lt;&amp;lt;endl;
                     while (query1.next()) {
                            //num = query1.value(0).toInt();
                            num1 = query1.value(0).toString();
                        }
                    //qDebug()&amp;lt;&amp;lt;&#34;NUM:&#34;&amp;lt;&amp;lt;num1&amp;lt;&amp;lt;endl;
                     //QSqlQuery
                     query.prepare(&#34;INSERT INTO `freenibs`.`pipes`  ( `bw`,`n`) values( &#39;&#34; +bw2+ &#34;&#39;,&#39;&#34;+num1+&#34;&#39;)&#34;);
                    // qDebug()&amp;lt;&amp;lt;query.lastError()&amp;lt;&amp;lt;endl;
                     query.exec();

                    exec_this =&#34;/sbin/ipfw delete &#34;;
                    exec_this +=num1;
                    system(exec_this.toStdString().c_str());
                    //qDebug()&amp;lt;&amp;lt;exec_this&amp;lt;&amp;lt;endl;

                    exec_this =&#34;/sbin/ipfw pipe &#34;;
                    exec_this +=num1;
                    exec_this +=&#34; config mask dst-ip 0x000000ff bw &#34;;
                    exec_this +=bw2;
                    exec_this +=&#34;Kbit/s&#34;;
                    system(exec_this.toStdString().c_str());
                    //qDebug()&amp;lt;&amp;lt;exec_this&amp;lt;&amp;lt;endl;

                    exec_this =&#34;/sbin/ipfw -q add &#34;;
                    exec_this +=num1;
                    exec_this +=&#34; pipe &#34;;
                    exec_this +=num1;
                    exec_this +=&#34; all from table\\(&#34;;
                    exec_this +=num1;
                    exec_this +=&#34;\\) to not 10.0.0.0/8 out&#34;;
                    system(exec_this.toStdString().c_str());
                    //qDebug()&amp;lt;&amp;lt;exec_this&amp;lt;&amp;lt;endl;


                    exec_this =&#34;/sbin/ipfw -q add &#34;;
                    exec_this +=num1;
                    exec_this +=&#34; pipe &#34;;
                    exec_this +=num1;
                    exec_this +=&#34; all from not 10.0.0.0/8 to table\\(&#34;;
                    exec_this +=num1;
                    exec_this +=&#34;\\) in &#34;;
                    system(exec_this.toStdString().c_str());
                    //qDebug()&amp;lt;&amp;lt;exec_this&amp;lt;&amp;lt;endl;


                    exec_this =&#34;/sbin/ipfw table &#34;;
                    exec_this +=num1;
                    exec_this += &#34; add &#34;;
                    exec_this +=ip;
                    system(exec_this.toStdString().c_str());
                    //qDebug()&amp;lt;&amp;lt;exec_this&amp;lt;&amp;lt;endl;
            }
        }

       //здесь Мы заполняем таблицу для того, что бы видеть что пользователь подключился
        QSqlQuery query(&#34;INSERT INTO `freenibs`.`updown` (`ip` ,`time` ,`status`) VALUES ( &#39;&#34;+ip_argv+&#34;&#39;,CURRENT_TIMESTAMP , &#39;up&#39;);&#34;);
        query.clear();
    }
     db.close();
//    return a.exec();
}
&lt;/pre&gt;

&lt;p&gt;Makefile&lt;/p&gt;

&lt;pre lang=&#34;make&#34; line=&#34;1&#34;&gt;#############################################################################
# Makefile for building: link-up
# Generated by qmake (2.01a) (Qt 4.4.3) on: Thu Jul 23 00:40:54 2009
# Project:  pro.pro
# Template: app
# Command: /usr/local/bin/qmake-qt4 -unix -o Makefile pro.pro
#############################################################################

####### Compiler, tools and options

CC            = cc
CXX           = c++
DEFINES       = -DQT_NO_DEBUG -DQT_SQL_LIB -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -fno-strict-aliasing -pipe -Wall -W $(DEFINES)
CXXFLAGS      = -pipe -O2 -fno-strict-aliasing -pipe -Wall -W $(DEFINES)
INCPATH       = -I/usr/local/share/qt4/mkspecs/freebsd-g++ -I. -I/usr/local/include/qt4/QtCore -I/usr/local/include/qt4/QtCore -I/usr/local/include/qt4/QtGui -I/usr/local/include/qt4/QtGui -I/usr/local/include/qt4/QtSql -I/usr/local/include/qt4/QtSql -I/usr/local/include/qt4 -I. -I. -I/usr/local/include
LINK          = c++
LFLAGS        = -pthread -Wl,-rpath,/usr/local/lib/qt4
LIBS          = $(SUBLIBS)  -L/usr/local/lib -L/usr/local/lib/qt4 -lQtSql -L/usr/local/lib/qt4 -L/usr/local/lib -pthread -pthread -lQtGui -pthread -lpng -lSM -lICE -pthread -pthread -lXi -lXrender -lXrandr -lfreetype -lfontconfig -lXext -lX11 -lQtCore -lz -lm -pthread -lgthread-2.0 -lglib-2.0 -liconv
AR            = ar cqs
RANLIB        =
QMAKE         = /usr/local/bin/qmake-qt4
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -R
INSTALL_FILE  = $(COPY_FILE)
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = $(COPY_FILE)
DEL_FILE      = rm -f
SYMLINK       = ln -sf
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp
OBJECTS       = main.o
DIST          = /usr/local/share/qt4/mkspecs/common/unix.conf \
                /usr/local/share/qt4/mkspecs/qconfig.pri \
                /usr/local/share/qt4/mkspecs/features/qt_functions.prf \
                /usr/local/share/qt4/mkspecs/features/qt_config.prf \
                /usr/local/share/qt4/mkspecs/features/exclusive_builds.prf \
                /usr/local/share/qt4/mkspecs/features/default_pre.prf \
                /usr/local/share/qt4/mkspecs/features/release.prf \
                /usr/local/share/qt4/mkspecs/features/default_post.prf \
                /usr/local/share/qt4/mkspecs/features/unix/thread.prf \
                /usr/local/share/qt4/mkspecs/features/warn_on.prf \
                /usr/local/share/qt4/mkspecs/features/qt.prf \
                /usr/local/share/qt4/mkspecs/features/moc.prf \
                /usr/local/share/qt4/mkspecs/features/resources.prf \
                /usr/local/share/qt4/mkspecs/features/uic.prf \
                /usr/local/share/qt4/mkspecs/features/yacc.prf \
                /usr/local/share/qt4/mkspecs/features/lex.prf \
                pro.pro
QMAKE_TARGET  = link-up
DESTDIR       =
TARGET        = link-up

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
        $(CXX) -c $(CXXFLAGS) $(INCPATH) -o &#34;$@&#34; &#34;$&amp;lt;&#34;

.cc.o:
        $(CXX) -c $(CXXFLAGS) $(INCPATH) -o &#34;$@&#34; &#34;$&amp;lt;&#34;

.cxx.o:
        $(CXX) -c $(CXXFLAGS) $(INCPATH) -o &#34;$@&#34; &#34;$&amp;lt;&#34;

.C.o:
        $(CXX) -c $(CXXFLAGS) $(INCPATH) -o &#34;$@&#34; &#34;$&amp;lt;&#34;

.c.o:
        $(CC) -c $(CFLAGS) $(INCPATH) -o &#34;$@&#34; &#34;$&amp;lt;&#34;

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)
        $(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: pro.pro  /usr/local/share/qt4/mkspecs/freebsd-g++/qmake.conf /usr/local/share/qt4/mkspecs/common/unix.conf \
                /usr/local/share/qt4/mkspecs/qconfig.pri \
                /usr/local/share/qt4/mkspecs/features/qt_functions.prf \
                /usr/local/share/qt4/mkspecs/features/qt_config.prf \
                /usr/local/share/qt4/mkspecs/features/exclusive_builds.prf \
                /usr/local/share/qt4/mkspecs/features/default_pre.prf \
                /usr/local/share/qt4/mkspecs/features/release.prf \
                /usr/local/share/qt4/mkspecs/features/default_post.prf \
                /usr/local/share/qt4/mkspecs/features/unix/thread.prf \
                /usr/local/share/qt4/mkspecs/features/warn_on.prf \
                /usr/local/share/qt4/mkspecs/features/qt.prf \
                /usr/local/share/qt4/mkspecs/features/moc.prf \
                /usr/local/share/qt4/mkspecs/features/resources.prf \
                /usr/local/share/qt4/mkspecs/features/uic.prf \
                /usr/local/share/qt4/mkspecs/features/yacc.prf \
                /usr/local/share/qt4/mkspecs/features/lex.prf \
                /usr/local/lib/qt4/libQtSql.prl \
                /usr/local/lib/qt4/libQtCore.prl \
                /usr/local/lib/qt4/libQtGui.prl
        $(QMAKE) -unix -o Makefile pro.pro
/usr/local/share/qt4/mkspecs/common/unix.conf:
/usr/local/share/qt4/mkspecs/qconfig.pri:
/usr/local/share/qt4/mkspecs/features/qt_functions.prf:
/usr/local/share/qt4/mkspecs/features/qt_config.prf:
/usr/local/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/local/share/qt4/mkspecs/features/default_pre.prf:
/usr/local/share/qt4/mkspecs/features/release.prf:
/usr/local/share/qt4/mkspecs/features/default_post.prf:
/usr/local/share/qt4/mkspecs/features/unix/thread.prf:
/usr/local/share/qt4/mkspecs/features/warn_on.prf:
/usr/local/share/qt4/mkspecs/features/qt.prf:
/usr/local/share/qt4/mkspecs/features/moc.prf:
/usr/local/share/qt4/mkspecs/features/resources.prf:
/usr/local/share/qt4/mkspecs/features/uic.prf:
/usr/local/share/qt4/mkspecs/features/yacc.prf:
/usr/local/share/qt4/mkspecs/features/lex.prf:
/usr/local/lib/qt4/libQtSql.prl:
/usr/local/lib/qt4/libQtCore.prl:
/usr/local/lib/qt4/libQtGui.prl:
qmake:  FORCE
        @$(QMAKE) -unix -o Makefile pro.pro

dist:
        @$(CHK_DIR_EXISTS) .tmp/link-up1.0.0 || $(MKDIR) .tmp/link-up1.0.0
        $(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/link-up1.0.0/ &amp;#038;&amp;#038; $(COPY_FILE) --parents main.cpp .tmp/link-up1.0.0/ &amp;#038;&amp;#038; (cd `dirname .tmp/link-up1.0.0` &amp;#038;&amp;#038; $(TAR) link-up1.0.0.tar link-up1.0.0 &amp;#038;&amp;#038; $(COMPRESS) link-up1.0.0.tar) &amp;#038;&amp;#038; $(MOVE) `dirname .tmp/link-up1.0.0`/link-up1.0.0.tar.gz . &amp;#038;&amp;#038; $(DEL_FILE) -r .tmp/link-up1.0.0


clean:compiler_clean
        -$(DEL_FILE) $(OBJECTS)
        -$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
        -$(DEL_FILE) $(TARGET)
        -$(DEL_FILE) Makefile


mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all:
compiler_moc_header_clean:
compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
        -$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean:

####### Compile

main.o: main.cpp
        $(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:


&lt;/pre&gt;

&lt;p&gt;дамп базы:&lt;/p&gt;

&lt;pre lang=&#34;cpp&#34; line=&#34;1&#34;&gt;-- phpMyAdmin SQL Dump
-- version 3.1.2
-- http://www.phpmyadmin.net
--
SET SQL_MODE=&#34;NO_AUTO_VALUE_ON_ZERO&#34;;

--
-- База данных: `bezlim`
--

-- --------------------------------------------------------

--
-- Структура таблицы `all`
--

DROP TABLE IF EXISTS `all`;
CREATE TABLE IF NOT EXISTS `all` (
  `ip` varchar(48) NOT NULL default &#39;192.168.0.1&#39;,
  `rule` int(32) NOT NULL default &#39;500&#39;,
  `bw1` varchar(12) NOT NULL default &#39;0&#39;,
  `bw2` varchar(12) NOT NULL default &#39;0&#39;,
  `activ` char(1) NOT NULL default &#39;y&#39;,
  `id` int(32) NOT NULL auto_increment,
  PRIMARY KEY  (`id`),
  UNIQUE KEY `ip` (`ip`)
) ENGINE=MyISAM  DEFAULT CHARSET=latin1 AUTO_INCREMENT=3326 ;



--
-- База данных: `freenibs`
--

-- --------------------------------------------------------

-- --------------------------------------------------------

--
-- Структура таблицы `pipes`
--

DROP TABLE IF EXISTS `pipes`;
CREATE TABLE IF NOT EXISTS `pipes` (
  `id` int(255) NOT NULL auto_increment,
  `n` int(255) NOT NULL default &#39;11&#39;,
  `bw` int(255) default &#39;0&#39;,
  PRIMARY KEY  (`id`),
  UNIQUE KEY `bw` (`bw`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=63 ;

--
-- Дамп данных таблицы `pipes`
--

--
-- Структура таблицы `updown`
--

DROP TABLE IF EXISTS `updown`;
CREATE TABLE IF NOT EXISTS `updown` (
  `id` bigint(255) NOT NULL auto_increment,
  `ip` varchar(100) NOT NULL default &#39;0.0.0.0&#39;,
  `time` timestamp NOT NULL default CURRENT_TIMESTAMP,
  `status` enum(&#39;up&#39;,&#39;down&#39;) NOT NULL,
  PRIMARY KEY  (`id`)
) ENGINE=MyISAM  DEFAULT CHARSET=latin1 AUTO_INCREMENT=1758553 ;

--
-- Триггеры `updown`
--
DROP TRIGGER IF EXISTS `freenibs`.`inserttest`;
DELIMITER //
CREATE TRIGGER `freenibs`.`inserttest` BEFORE INSERT ON `freenibs`.`updown`
 FOR EACH ROW BEGIN
UPDATE `users` SET `users`.`up_n`=`users`.`up_n`+1 WHERE `users`.`framed_ip`=NEW.ip;
END
//
DELIMITER ;



&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>Очистка базы биллинга freeNIBS от данных старше 3-х месяцев</title>
      <link>http://b-comm.ru/billing/%D0%BE%D1%87%D0%B8%D1%81%D1%82%D0%BA%D0%B0-%D0%B1%D0%B0%D0%B7%D1%8B-%D0%B1%D0%B8%D0%BB%D0%BB%D0%B8%D0%BD%D0%B3%D0%B0-freenibs-%D0%BE%D1%82-%D0%B4%D0%B0%D0%BD%D0%BD%D1%8B%D1%85-%D1%81%D1%82%D0%B0%D1%80</link>
      <pubDate>Sat, 25 Jul 2009 10:53:20 +0000</pubDate>
      
      <guid>http://b-comm.ru/billing/%D0%BE%D1%87%D0%B8%D1%81%D1%82%D0%BA%D0%B0-%D0%B1%D0%B0%D0%B7%D1%8B-%D0%B1%D0%B8%D0%BB%D0%BB%D0%B8%D0%BD%D0%B3%D0%B0-freenibs-%D0%BE%D1%82-%D0%B4%D0%B0%D0%BD%D0%BD%D1%8B%D1%85-%D1%81%D1%82%D0%B0%D1%80</guid>
      <description>&lt;p&gt;Очистка базы биллинга freeNIBS от данных старше 3-х месяцев, хотя можно и больше оставить, можно и меньше.&lt;/p&gt;

&lt;p&gt;Дело в том, что база actions разрастается &amp;#8212; выборка медленее, мускулу тяжелее)))&lt;/p&gt;

&lt;p&gt;15592000 &amp;#8212; это число в секундах, почти 59 дней)))&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;pre lang=&#34;cpp&#34; line=&#34;1&#34;&gt;#include &amp;lt;QtCore&gt;
#include &amp;lt;QCoreApplication&gt;
#include &amp;lt;QtSql&gt;
#include &amp;lt;iostream&gt;
#include &amp;lt;cstdlib&gt;
#include &amp;lt;iomanip&gt;
#include &amp;lt;stdio.h&gt;
#include &amp;lt;stdlib.h&gt;
#include &amp;lt;string.h&gt;
#include &amp;lt;time.h&gt;
using namespace std;


#define SQLDRIVER &#34;QMYSQL&#34;
#define HOST &#34;10.1.1.1&#34;
#define DBNAME &#34;freenibs&#34;
#define USER &#34;freenibs&#34;
#define PASSWORD &#34;freenibs&#34;

int main(int argc, char *argv[])
{
    QCoreApplication a(argc, argv);

    QTextCodec *codec = QTextCodec::codecForName(&#34;CP1251&#34;);
    QTextCodec::setCodecForTr(codec);
    QTextCodec::setCodecForCStrings(codec);

    QSqlDatabase db = QSqlDatabase::addDatabase(SQLDRIVER);

    if( !db.isDriverAvailable(SQLDRIVER))
    {

    }


    db.setHostName(HOST);
    db.setDatabaseName(DBNAME);
    db.setUserName(USER);
    db.setPassword(PASSWORD);
    //db.setPort(3306);
    bool ok=db.open();
    if(ok!=true){
        std::cout&amp;lt;&amp;lt;&#34;unable connec&#39;t&#34;;
        exit(1);
    }
    // QString exec_this;

    QVector&amp;lt;QString&gt; tables(0);
    tables.append(&#34;`actions`&#34;);







//очищаем таблица actions
            QSqlQuery query(&#34; DELETE FROM `actions` WHERE `start_time`&amp;lt;FROM_UNIXTIME(UNIX_TIMESTAMP(NOW() )-15592000); &#34;);
            query.clear();

            QSqlQuery query1(&#34; OPTIMIZE TABLE `actions`; &#34;);
            query1.clear();
//очищаем таблица updown
            QSqlQuery query4(&#34; DELETE FROM `updown` WHERE `time`&amp;lt;FROM_UNIXTIME(UNIX_TIMESTAMP(NOW() )-15592000); &#34;);
            query4.clear();

            QSqlQuery query5(&#34; OPTIMIZE TABLE `updown`; &#34;);
            query5.clear();

            //qDebug()&amp;lt;&amp;lt;query.lastError()&amp;lt;&amp;lt;endl;


     db.close();
//    return a.exec();
}

&lt;/pre&gt;

&lt;p&gt;Makefile:&lt;/p&gt;

&lt;pre lang=&#34;makefile&#34; line=&#34;1&#34;&gt;#############################################################################
# Makefile for building: freenibs_clear
# Generated by qmake (2.01a) (Qt 4.4.3) on: Sun Mar 15 02:29:55 2009
# Project:  pro.pro
# Template: app
# Command: /usr/local/bin/qmake-qt4 -unix -o Makefile pro.pro
#############################################################################

####### Compiler, tools and options

CC            = cc
CXX           = c++
DEFINES       = -DQT_NO_DEBUG -DQT_SQL_LIB -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -fno-strict-aliasing -pipe -Wall -W $(DEFINES)
CXXFLAGS      = -pipe -O2 -fno-strict-aliasing -pipe -Wall -W $(DEFINES)
INCPATH       = -I/usr/local/share/qt4/mkspecs/freebsd-g++ -I. -I/usr/local/include/qt4/QtCore -I/usr/local/include/qt4/QtCore -I/usr/local/include/qt4/QtGui -I/usr/local/include/qt4/QtGui -I/usr/local/include/qt4/QtSql -I/usr/local/include/qt4/QtSql -I/usr/local/include/qt4 -I. -I. -I/usr/local/include
LINK          = c++
LFLAGS        = -pthread -Wl,-rpath,/usr/local/lib/qt4
LIBS          = $(SUBLIBS)  -L/usr/local/lib -L/usr/local/lib/qt4 -lQtSql -L/usr/local/lib/qt4 -L/usr/local/lib -pthread -pthread -lQtGui -pthread -lpng -lSM -lICE -pthread -pthread -lXi -lXrender -lXrandr -lfreetype -lfontconfig -lXext -lX11 -lQtCore -lz -lm -pthread -lgthread-2.0 -lglib-2.0 -liconv
AR            = ar cqs
RANLIB        =
QMAKE         = /usr/local/bin/qmake-qt4
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -R
INSTALL_FILE  = $(COPY_FILE)
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = $(COPY_FILE)
DEL_FILE      = rm -f
SYMLINK       = ln -sf
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp
OBJECTS       = main.o
DIST          = /usr/local/share/qt4/mkspecs/common/unix.conf \
                /usr/local/share/qt4/mkspecs/qconfig.pri \
                /usr/local/share/qt4/mkspecs/features/qt_functions.prf \
                /usr/local/share/qt4/mkspecs/features/qt_config.prf \
                /usr/local/share/qt4/mkspecs/features/exclusive_builds.prf \
                /usr/local/share/qt4/mkspecs/features/default_pre.prf \
                /usr/local/share/qt4/mkspecs/features/release.prf \
                /usr/local/share/qt4/mkspecs/features/default_post.prf \
                /usr/local/share/qt4/mkspecs/features/unix/thread.prf \
                /usr/local/share/qt4/mkspecs/features/warn_on.prf \
                /usr/local/share/qt4/mkspecs/features/qt.prf \
                /usr/local/share/qt4/mkspecs/features/moc.prf \
                /usr/local/share/qt4/mkspecs/features/resources.prf \
                /usr/local/share/qt4/mkspecs/features/uic.prf \
                /usr/local/share/qt4/mkspecs/features/yacc.prf \
                /usr/local/share/qt4/mkspecs/features/lex.prf \
                pro.pro
QMAKE_TARGET  = freenibs_clear
DESTDIR       =
TARGET        = freenibs_clear

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
        $(CXX) -c $(CXXFLAGS) $(INCPATH) -o &#34;$@&#34; &#34;$&amp;lt;&#34;

.cc.o:
        $(CXX) -c $(CXXFLAGS) $(INCPATH) -o &#34;$@&#34; &#34;$&amp;lt;&#34;

.cxx.o:
        $(CXX) -c $(CXXFLAGS) $(INCPATH) -o &#34;$@&#34; &#34;$&amp;lt;&#34;

.C.o:
        $(CXX) -c $(CXXFLAGS) $(INCPATH) -o &#34;$@&#34; &#34;$&amp;lt;&#34;

.c.o:
        $(CC) -c $(CFLAGS) $(INCPATH) -o &#34;$@&#34; &#34;$&amp;lt;&#34;

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)
        $(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: pro.pro  /usr/local/share/qt4/mkspecs/freebsd-g++/qmake.conf /usr/local/share/qt4/mkspecs/common/unix.conf \
                /usr/local/share/qt4/mkspecs/qconfig.pri \
                /usr/local/share/qt4/mkspecs/features/qt_functions.prf \
                /usr/local/share/qt4/mkspecs/features/qt_config.prf \
                /usr/local/share/qt4/mkspecs/features/exclusive_builds.prf \
                /usr/local/share/qt4/mkspecs/features/default_pre.prf \
                /usr/local/share/qt4/mkspecs/features/release.prf \
                /usr/local/share/qt4/mkspecs/features/default_post.prf \
                /usr/local/share/qt4/mkspecs/features/unix/thread.prf \
                /usr/local/share/qt4/mkspecs/features/warn_on.prf \
                /usr/local/share/qt4/mkspecs/features/qt.prf \
                /usr/local/share/qt4/mkspecs/features/moc.prf \
                /usr/local/share/qt4/mkspecs/features/resources.prf \
                /usr/local/share/qt4/mkspecs/features/uic.prf \
                /usr/local/share/qt4/mkspecs/features/yacc.prf \
                /usr/local/share/qt4/mkspecs/features/lex.prf \
                /usr/local/lib/qt4/libQtSql.prl \
                /usr/local/lib/qt4/libQtCore.prl \
                /usr/local/lib/qt4/libQtGui.prl
        $(QMAKE) -unix -o Makefile pro.pro
/usr/local/share/qt4/mkspecs/common/unix.conf:
/usr/local/share/qt4/mkspecs/qconfig.pri:
/usr/local/share/qt4/mkspecs/features/qt_functions.prf:
/usr/local/share/qt4/mkspecs/features/qt_config.prf:
/usr/local/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/local/share/qt4/mkspecs/features/default_pre.prf:
/usr/local/share/qt4/mkspecs/features/release.prf:
/usr/local/share/qt4/mkspecs/features/default_post.prf:
/usr/local/share/qt4/mkspecs/features/unix/thread.prf:
/usr/local/share/qt4/mkspecs/features/warn_on.prf:
/usr/local/share/qt4/mkspecs/features/qt.prf:
/usr/local/share/qt4/mkspecs/features/moc.prf:
/usr/local/share/qt4/mkspecs/features/resources.prf:
/usr/local/share/qt4/mkspecs/features/uic.prf:
/usr/local/share/qt4/mkspecs/features/yacc.prf:
/usr/local/share/qt4/mkspecs/features/lex.prf:
/usr/local/lib/qt4/libQtSql.prl:
/usr/local/lib/qt4/libQtCore.prl:
/usr/local/lib/qt4/libQtGui.prl:
qmake:  FORCE
        @$(QMAKE) -unix -o Makefile pro.pro

dist:
        @$(CHK_DIR_EXISTS) .tmp/freenibs_clear1.0.0 || $(MKDIR) .tmp/freenibs_clear1.0.0
        $(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/freenibs_clear1.0.0/ &amp;#038;&amp;#038; $(COPY_FILE) --parents main.cpp .tmp/freenibs_clear1.0.0/ &amp;#038;&amp;#038; (cd `dirname .tmp/freenibs_clear1.0.0` &amp;#038;&amp;#038; $(TAR) freenibs_clear1.0.0.tar freenibs_clear1.0.0 &amp;#038;&amp;#038; $(COMPRESS) freenibs_clear1.0.0.tar) &amp;#038;&amp;#038; $(MOVE) `dirname .tmp/freenibs_clear1.0.0`/freenibs_clear1.0.0.tar.gz . &amp;#038;&amp;#038; $(DEL_FILE) -r .tmp/freenibs_clear1.0.0


clean:compiler_clean
        -$(DEL_FILE) $(OBJECTS)
        -$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
        -$(DEL_FILE) $(TARGET)
        -$(DEL_FILE) Makefile


mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all:
compiler_moc_header_clean:
compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
        -$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean:

####### Compile

main.o: main.cpp
        $(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:


&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>FreeNIBS Снятие абонплаты за сутки</title>
      <link>http://b-comm.ru/billing/freenibs-%D1%81%D0%BD%D1%8F%D1%82%D0%B8%D0%B5-%D0%B0%D0%B1%D0%BE%D0%BD%D0%BF%D0%BB%D0%B0%D1%82%D1%8B-%D0%B7%D0%B0-%D1%81%D1%83%D1%82%D0%BA%D0%B8</link>
      <pubDate>Thu, 23 Jul 2009 21:33:48 +0000</pubDate>
      
      <guid>http://b-comm.ru/billing/freenibs-%D1%81%D0%BD%D1%8F%D1%82%D0%B8%D0%B5-%D0%B0%D0%B1%D0%BE%D0%BD%D0%BF%D0%BB%D0%B0%D1%82%D1%8B-%D0%B7%D0%B0-%D1%81%D1%83%D1%82%D0%BA%D0%B8</guid>
      <description>&lt;p&gt;Данный скрипт позволяет снимать абонплату за сутки.&lt;/p&gt;

&lt;p&gt;Посмотрим сначала web-морду, которая позволяет посмотреть снятия:&lt;/p&gt;

&lt;pre lang=&#34;php&#34;&gt;&lt;?
//sutki
echo &#34;===============================================\n&#34;;
echo date(&#34;Y-m-d H:i:s&#34;).&#34;\n&#34;;
echo &#34;===============================================\n&#34;;

$us=&#34;freenibs&#34;;
$db=&#34;freenibs&#34;;
$pass=&#34;freenibs&#34;;
$host=&#34;localhost&#34;;

$date_today = date(&#34;Y-m-d H:i:s&#34;);
$prev_month_date_start = mktime (0,0,0,date(&#34;m&#34;)-1,1,date(&#34;Y&#34;));
$prev_month_date_stop = mktime (0,0,0-1,date(&#34;m&#34;),1,date(&#34;Y&#34;));
$r=mysql_connect($host,$us,$pass);
$query=&#34;select users.uid,users.gid,users.user,users.deposit,packets.fixed,packets.fixed_cost,users.blocked from users,packets where users.gid=packets.gid and users.blocked=0 and packets.fixed=2 and packets.fixed_cost &gt; 0 order by ucase(users.user)&#34;;
$result=mysql_db_query($db,$query,$r) or die (&#34;Error query&#34;);

echo &#34;

&lt;BR /&gt;Пользователь |До снятия| Добавлено | Остаток &lt;BR /&gt;&#34;;
while ($row=mysql_fetch_array($result)) {
$uid=$row[&#34;uid&#34;];
$gid=$row[&#34;gid&#34;];
$user=$row[&#34;user&#34;];

$deposit=$row[&#34;deposit&#34;];
$fixed_cost=$row[&#34;fixed_cost&#34;];

$query_num=&#34;SELECT COUNT(user) FROM actions WHERE user=&#39;$user&#39; AND start_time &gt; FROM_UNIXTIME($prev_month_date_start) AND start_time &amp;lt; FROM_UNIXTIME($prev_month_date_stop)&#34;;
$result_num=mysql_db_query($db,$query_num,$r) or die (&#34;Error query&#34;);
$rez = mysql_fetch_array($result_num);

$uniq=rand();
$id=rand();
$posle=$deposit-$fixed_cost;
echo &#34;&lt;BR /&gt;&#34;.$user.&#34; |$deposit| -$fixed_cost |$posle &lt;BR /&gt;&#34;;
echo &#34;=====================================\n\n&lt;BR /&gt;&#34;;
};?&gt;&lt;/pre&gt;

&lt;p&gt;А теперь собственно сам скрипт под гордым названием &lt;strong&gt;abon_day.php&lt;/strong&gt; &lt;/p&gt;

&lt;pre lang=&#34;php&#34;&gt;&lt;?
//sutki
echo date(&#34;Y-m-d H:i:s&#34;).&#34;\n&#34;;
echo &#34;-------------------------------------------------------------------------------------\n&#34;;

$us=&#34;freenibs&#34;;
$db=&#34;freenibs&#34;;
$pass=&#34;freenibs&#34;;
$host=&#34;localhost&#34;;
$bez_abonki_per_month=&#34;10&#34;; //sum which user&#39;s must&#39;nt pay for abonplatu

$date_today = date(&#34;Y-m-d H:i:s&#34;);
$prev_month_date_start = mktime (0,0,0,date(&#34;m&#34;)-1,1,date(&#34;Y&#34;));
$prev_month_date_stop = mktime (0,0,0-1,date(&#34;m&#34;),1,date(&#34;Y&#34;));

$r=mysql_connect($host,$us,$pass); // packets.fixed=2 - day // packets.fixed=0 - month
$query=&#34;select users.uid,users.gid,users.bezabon,users.user,users.deposit,packets.fixed,packets.fixed_cost,users.blocked from users,packets where users.gid=packets.gid and users.blocked=0 and packets.fixed=2 and packets.fixed_cost &gt; 0 order by ucase(users.user)&#34;;
$result=mysql_db_query($db,$query,$r) or die (&#34;Error query&#34;);



while ($row=mysql_fetch_array($result)) {

$uid=$row[&#34;uid&#34;];

$gid=$row[&#34;gid&#34;];
$user=$row[&#34;user&#34;];

$deposit=$row[&#34;deposit&#34;];
$fixed_cost=$row[&#34;fixed_cost&#34;];

switch($row[&#39;bezabon&#39;])
{
case &#34;yes&#34;:
echo &#34;BEZABONKI\n&#34;;
//$fixed_cost=$fixed_cost-$bez_abonki_per_month;
break;

}



$query_num=&#34;SELECT COUNT(user) FROM actions WHERE user=&#39;$user&#39; AND start_time &gt; FROM_UNIXTIME($prev_month_date_start) AND start_time &amp;lt; FROM_UNIXTIME($prev_month_date_stop)&#34;;
$result_num=mysql_db_query($db,$query_num,$r) or die (&#34;Error query&#34;);
$rez = mysql_fetch_array($result_num);

//if ($rez[0] != 0) {
echo &#34;

&lt;BR /&gt;&#34;.$rez[0].&#34; | &#34;.$user.&#34; | &lt;BR /&gt;zapros:  &#34;.$query_num.&#34;\n &lt;BR /&gt;&#34;;
$uniq=rand();
$id=rand();
$query_u=&#34;insert into actions set unique_id=&#39;$uniq&#39;,id=&#39;$id&#39;,start_time=&#39;$date_today&#39;,stop_time=&#39;$date_today&#39;,in_bytes=&#39;0&#39;, out_bytes=&#39;0&#39;, before_billing=&#39;$deposit&#39;,billing_minus=&#39;-$fixed_cost&#39;,user=&#39;$user&#39;,gid=&#39;$gid&#39;,comment=&#39;Abonplata-DAY&#39;&#34;;
$posle=$deposit-$fixed_cost;
if ($posle == 0) $posle = &#39;-0.000001&#39;;
$query_dep=&#34;update users set deposit=&#39;$posle&#39; where uid=&#39;$uid&#39;&#34;;
// $query_abon=&#34;insert into abonplata set id=&#39;&#39;,user=&#39;$user&#39;,date=&#39;$date_today&#39;,fixed_cost=&#39;$fixed_cost&#39;,do=&#39;$deposit&#39;,posle=&#39;$posle&#39;&#34;;
echo $query_u.&#34;; ;\n&lt;BR /&gt;&#34;;
echo $query_dep.&#34;; ;\n&lt;BR /&gt;&#34;;
// echo $query_abon.&#34;\n&#34;;
echo &#34;=====================================\n\n&lt;BR /&gt;&#34;;

$r1=mysql_connect($host,$us,$pass);
mysql_db_query($db,$query_u,$r1) or die (&#34;Error query_u : $query_u&#34;);
mysql_db_query($db,$query_dep,$r1) or die (&#34;Error query_dep : $query_dep&#34;);
};
echo &#34;\n\n&#34;;
?&gt;

&lt;/pre&gt;

&lt;p&gt;Результат, но он не читабельный&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Работа с зависшими пользователями</title>
      <link>http://b-comm.ru/billing/%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%B0-%D1%81-%D0%B7%D0%B0%D0%B2%D0%B8%D1%81%D1%88%D0%B8%D0%BC%D0%B8-%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D0%BE%D0%B2%D0%B0%D1%82%D0%B5%D0%BB%D1%8F%D0%BC%D0%B8</link>
      <pubDate>Thu, 23 Jul 2009 11:09:52 +0000</pubDate>
      
      <guid>http://b-comm.ru/billing/%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%B0-%D1%81-%D0%B7%D0%B0%D0%B2%D0%B8%D1%81%D1%88%D0%B8%D0%BC%D0%B8-%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D0%BE%D0%B2%D0%B0%D1%82%D0%B5%D0%BB%D1%8F%D0%BC%D0%B8</guid>
      <description>&lt;p&gt;Работа с зависшими пользователями, zapped users)))&lt;/p&gt;

&lt;p&gt;В наличии FreeBSD сервер, mpd5/mpd4 сервер доступа.&lt;/p&gt;

&lt;p&gt;Давно нарыл скрипт, который киляет зависших пользователей при таймауте сессии в 180сек. Я пытался меньше сделать &amp;#8212; но ничего не получается, нормальные сессии падают(((&lt;/p&gt;

&lt;p&gt;freez_user_kill.sh:&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;pre lang=&#34;bash&#34; line=&#34;1&#34;&gt;#!/bin/sh

USER=&#39;freenibs&#39;
PASSWORD=&#39;freenibs&#39;
DATABASE=&#39;freenibs&#39;
#USER=&#39;root&#39;

TIMEOUT=180

res=`/usr/local/bin/mysql -B -s -u $USER -p$PASSWORD $DATABASE -e \
&#34;select unique_id from actions \
where terminate_cause = &#39;Online&#39; and (UNIX_TIMESTAMP() - last_change) &gt; $TIMEOUT&#34;`

#Можно использовать and server=&#39;127.0.0.1&#39; или любой другой ИП для СЕРВЕРА доступа)))

nasport=`/usr/local/bin/mysql -B -s -u $USER -p$PASSWORD $DATABASE -e \
&#34;select port from actions \
where terminate_cause = &#39;Online&#39;   and (UNIX_TIMESTAMP() - last_change) &gt; $TIMEOUT&#34;`



if [ -n &#34;$res&#34; ]; then
echo &#34;session ids:&#34; $res
echo &#34;nasport:&#34; $nasport

res=`/usr/local/bin/mysql -B -s -u $USER -p$PASSWORD $DATABASE -e \
&#34;update actions set terminate_cause = &#39;User-Request&#39;, \
stop_time = date_add(start_time, interval ifnull(time_on, 0) second) \
where terminate_cause = &#39;Online&#39;  and (UNIX_TIMESTAMP() - last_change) &gt; $TIMEOUT&#34;`
fi

for p in $nasport; do
/usr/local/etc/raddb/userkill.pl 1 2 3 $p

done


&lt;/pre&gt;

&lt;p&gt;Скрипт непосредственного &amp;#171;сбрасывания&amp;#187; пользователя -/usr/local/etc/raddb/userkill.pl.&lt;/p&gt;

&lt;p&gt;Но с этим скриптом есть беда после использования mpd5.4 &amp;#8212; у него такой параметр как nasport в базе billng&amp;#8217;a FreeNIBS не совпадает с тем чем надо))):&lt;/p&gt;

&lt;pre lang=&#34;perl&#34; line=&#34;1&#34;&gt;#!/usr/local/bin/perl
#
#Это старая версия скрипта
#Тут надо вручную указывать сервер доступа
$hostname=&#34;127.0.0.1&#34;;
$port=&#34;5005&#34;;
if( $ARGV[3] eq &#39;&#39; ) { die &#39;Usage:  user nasip userip nasport&#39;; };

$user=$ARGV[0];
$nasip=$ARGV[1];
$userip=$ARGV[2];
$nasport=$ARGV[3];

#$nasport=$nasport+1;

$hostname=&#34;127.0.0.1&#34;;

$port=&#34;5005&#34;;

use Net::Telnet ();

$t = new Net::Telnet (Timeout =&gt; 2,Port =&gt; $port,Binmode =&gt; &#39;\015\012&#39;,
                               Prompt =&gt; &#39;/\[\]/&#39;);
$t-&gt;open(&#34;$hostname&#34;);
$t-&gt;login(&#34;mpd&#34;, &#34;mpd_password&#34;);

$t-&gt;print(&#34;link L-&#34;.$nasport);
$t-&gt;print(&#34;&#34;);
$t-&gt;print(&#34;close&#34;);
$t-&gt;print(&#34;&#34;);
$t-&gt;print(&#34;exit&#34;);
$t-&gt;print(&#34;&#34;);
$t-&gt;close();
exit 0;
&lt;/pre&gt;

&lt;pre lang=&#34;bash&#34;&gt;#pkg_info |grep perl
libtext-charwidth-perl-0.04 Documentation gettext tools
libtext-wrapi18n-perl-0.06 Documentation gettext tools
p5-DBI-1.60.7       The perl5 Database Interface.  Required for DBD::* modules
p5-Net-Radius-1.56  A perl module to manipulate RADIUS packets
p5-SNMP_Session-1.12 A perl5 module providing rudimentary access to SNMPv1 and v
p5-Scalar-List-Utils-1.19,1 Perl subroutines that would be nice to have in the perl cor
p5-Storable-2.18    Persistency for perl data structures
p5-Term-ReadKey-2.30 A perl5 module for simple terminal control
p5-Test-Harness-3.14_2 Run perl standard test scripts with statistics
p5-Test-Simple-0.86 Basic utilities for writing tests in perl
p5-Time-HiRes-1.9719,1 A perl5 module implementing High resolution time, sleep, an
perl-5.8.9_1        Practical Extraction and Report Language

[13:20] wel@server  /usr/home/wel #uname -a
FreeBSD server.home 6.2-RELEASE-p12 FreeBSD 6.2-RELEASE-p12 #11: Mon Jan  5 02:37:52 EET 2009     wel@server.home:/usr/obj/usr/src/sys/SERVER  i386
&lt;/pre&gt;

&lt;p&gt;Нам надо &amp;#171;подконфигурировать&amp;#187; mpd5:&lt;/p&gt;

&lt;p&gt;/usr/local/etc/mpd5/mpd.conf а именно надо следить, что бы в конце были заветные admin!!!:&lt;/p&gt;

&lt;pre lang=&#34;bash&#34;&gt;startup:
    set user foo bar admin
&lt;/pre&gt;

&lt;p&gt;Дальше пример сессии:&lt;/p&gt;

&lt;pre lang=&#34;bash&#34; line=&#34;1&#34;&gt;/home/wel &gt;telnet 127.0.0.1 5005
Connected to 127.0.0.1.
Escape character is &#39;^]&#39;.
Multi-link PPP daemon for FreeBSD

Username: mpd
Password:

Welcome!
Mpd pid 5377, version 5.5 (root@nas1 03:47  1-Dec-2010)
[] show summary
Current daemon status summary
Iface   Bund            Link    LCP     Device          User            From
                        L       Initial pptp    DOWN                    UNSPEC
                        L1      Initial pptp    DOWN                    UNSPEC
                        L2      Initial pptp    DOWN                    UNSPEC
        B       Down
        B1      Down
        B2      Down
ng44    B-47    Up      L-47    Opened  pptp    UP          slim        10.1.20.18
[]
[]
Available commands:
 authname : Choose link by auth name     bundle   : Choose/list bundles
 close    : Close a layer                create   : Create new item
 destroy  : Destroy item                 exit     : Exit console
 iface    : Choose bundle by iface       help     : Help on any command
 link     : Choose link                  load     : Read from config file
 log      : Set/view log options         msession : Ch. bundle by msession-id
 open     : Open a layer                 quit     : Quit program
 repeater : Choose/list repeaters        session  : Choose link by session-id
 set      : Set parameters               show     : Show status
[] authname slim
[L-47]

&lt;/pre&gt;

&lt;p&gt;Как видно по имени пользователя Я перешёл на [L-47]&lt;/p&gt;

&lt;p&gt;Новая версия /usr/local/etc/raddb/userkill_nas_new.pl:&lt;/p&gt;

&lt;pre lang=&#34;perl&#34; line=&#34;1&#34;&gt;#!/usr/local/bin/perl
#
#Это новая версия скрипта
#Тут не надо вручную указывать сервер доступа
$hostname=&#34;127.0.0.1&#34;;
$port=&#34;5005&#34;;
if( $ARGV[3] eq &#39;&#39; ) { die &#39;Usage:  user nasip userip nasport&#39;; };

$user=$ARGV[0];
$nasip=$ARGV[1];
$userip=$ARGV[2];
$nasport=$ARGV[3];

#$nasport=$nasport+1;

#$hostname=&#34;127.0.0.1&#34;;
$hostname=$nasip;

$port=&#34;5005&#34;;

use Net::Telnet ();

$t = new Net::Telnet (Timeout =&gt; 2,Port =&gt; $port,Binmode =&gt; &#39;\015\012&#39;,
                               Prompt =&gt; &#39;/\[\]/&#39;);
$t-&gt;open(&#34;$hostname&#34;);
$t-&gt;login(&#34;mpd&#34;, &#34;mpd_password&#34;);

$t-&gt;print(&#34;link L-&#34;.$nasport);
$t-&gt;print(&#34;&#34;);
$t-&gt;print(&#34;authname &#34;.$user);
$t-&gt;print(&#34;&#34;);
$t-&gt;print(&#34;close&#34;);
$t-&gt;print(&#34;&#34;);
$t-&gt;print(&#34;exit&#34;);
$t-&gt;print(&#34;&#34;);
$t-&gt;close();
exit 0;
&lt;/pre&gt;

&lt;p&gt;Новая версия скрипта для сбрасывания пользователей:&lt;/p&gt;

&lt;p&gt;freez_user_kill.php&lt;/p&gt;

&lt;pre lang=&#34;php&#34; line=&#34;1&#34;&gt;#!/usr/local/bin/php
&lt;?php
$link = mysql_connect(&#39;10.1.1.1&#39;, &#39;freenibs&#39;, &#39;freenibs&#39;);
if (!$link) {
        die(&#39;Could not connect: &#39; . mysql_error());
}
/*  */

mysql_select_db(&#34;freenibs&#34;);

$TIMEOUT=180;


$q=&#34;select 
       `unique_id`,
       `port`,
       `user`,
       `client_ip`,
       `server`
from 
       `actions`
where 
         `terminate_cause` = &#39;Online&#39; and (UNIX_TIMESTAMP() - last_change) &gt; $TIMEOUT&#34;;

$result = mysql_query($q);
$num_rows = mysql_num_rows($result);
if($num_rows&gt;0){
         while ($row = mysql_fetch_array($result, MYSQL_ASSOC)) {
                $unique_id=$row[&#39;unique_id&#39;];
                $port=$row[&#39;port&#39;];
                $user=$row[&#39;user&#39;];
                $server=$row[&#39;server&#39;];
                 $userip=$row[&#39;client_ip&#39;];
                 echo &#34;session: &#34;.$unique_id.&#34; will rise :)\n&#34;;
                $last_line = system(&#39;/usr/local/etc/raddb/userkill_nas_new.pl &#39;.$user.&#39; &#39;.$server.&#39; &#39;.$userip.&#39; &#39;.$port.&#34;&#34;, $retval);
         }


//чистим сессии
//только смотрите - могут новые появиться, пока выполнялся скрипт
//можно так)))
$TIMEOUT=+2;

$q=&#34;update actions set terminate_cause = &#39;User-Request&#39;, \
stop_time = date_add(start_time, interval ifnull(time_on, 0) second) \
where terminate_cause = &#39;Online&#39;  and (UNIX_TIMESTAMP() - last_change) &gt; $TIMEOUT&#34;;
$result = mysql_query($q);

}

&lt;/pre&gt;

&lt;p&gt;В кронтаб (crontab)&lt;/p&gt;

&lt;pre lang=&#34;bash&#34;&gt;*/5        *    *       *       *       root    /usr/local/etc/mpd5/freez_user_kill.php  2&gt;&amp;1
&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>Складирование arp записей мак-адресов с помощью скрипта arpwatch на qt4 &#43; mysql</title>
      <link>http://b-comm.ru/billing/%D1%81%D0%BA%D0%BB%D0%B0%D0%B4%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5-arp-%D0%B7%D0%B0%D0%BF%D0%B8%D1%81%D0%B5%D0%B9-%D0%BC%D0%B0%D0%BA-%D0%B0%D0%B4%D1%80%D0%B5%D1%81%D0%BE%D0%B2-%D1%81</link>
      <pubDate>Thu, 23 Jul 2009 01:09:17 +0000</pubDate>
      
      <guid>http://b-comm.ru/billing/%D1%81%D0%BA%D0%BB%D0%B0%D0%B4%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5-arp-%D0%B7%D0%B0%D0%BF%D0%B8%D1%81%D0%B5%D0%B9-%D0%BC%D0%B0%D0%BA-%D0%B0%D0%B4%D1%80%D0%B5%D1%81%D0%BE%D0%B2-%D1%81</guid>
      <description>&lt;p&gt;Дано: биллинг FreeNIBS 1.X &lt;em&gt;(можно что угодно)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Идея состояла в том, что у Нас есть активные пользователи, есть их ИП-ки, для Них Мы будем искать какие мак-адреса они имеют в текущий момент.&lt;/p&gt;

&lt;p&gt;Дальше Мы эти данные помещаем в базу freeNIBS.&lt;/p&gt;

&lt;p&gt;Я специально не добавил DROP IF exist&amp;#8230;&lt;/p&gt;

&lt;p&gt;Еще замечу, что переход на `actions` ENGINE=InnoDB плодотворно сказался на производительности и старенького компа под базу+freeNIBS стало вполне хватать.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;pre lang=&#34;sql&#34; line=&#34;1&#34;&gt;-- phpMyAdmin SQL Dump
-- version 3.1.2
-- http://www.phpmyadmin.net

SET SQL_MODE=&#34;NO_AUTO_VALUE_ON_ZERO&#34;;

--
-- База данных: `freenibs`
--

-- --------------------------------------------------------

--
-- Структура таблицы `actions`
--

CREATE TABLE IF NOT EXISTS `actions` (
  `user` varchar(64) NOT NULL default &#39;&#39;,
  `gid` smallint(100) NOT NULL default &#39;0&#39;,
  `id` varchar(32) NOT NULL default &#39;&#39;,
  `unique_id` varchar(64) NOT NULL default &#39;&#39;,
  `time_on` int(12) default NULL,
  `start_time` datetime NOT NULL default &#39;2003-01-01 00:00:00&#39;,
  `stop_time` datetime NOT NULL default &#39;0000-00-00 00:00:00&#39;,
  `in_bytes` bigint(255) default NULL,
  `out_bytes` bigint(255) default NULL,
  `ip` varchar(15) NOT NULL default &#39;&#39;,
  `server` varchar(15) NOT NULL default &#39;&#39;,
  `client_ip` varchar(15) NOT NULL default &#39;&#39;,
  `port` int(12) default NULL,
  `call_to` varchar(64) NOT NULL default &#39;&#39;,
  `call_from` varchar(64) NOT NULL default &#39;&#39;,
  `connect_info` varchar(254) default NULL,
  `protocol` varchar(32) default NULL,
  `terminate_cause` varchar(64) NOT NULL default &#39;&#39;,
  `comment` varchar(128) default NULL,
  `hour_in_bytes` bigint(255) unsigned NOT NULL default &#39;0&#39;,
  `hour_out_bytes` bigint(255) unsigned NOT NULL default &#39;0&#39;,
  `hour_traffic_money` double(10,4) NOT NULL default &#39;0.0000&#39;,
  `last_change` int(10) unsigned NOT NULL default &#39;0&#39;,
  `before_billing` double(10,4) NOT NULL default &#39;0.0000&#39;,
  `billing_minus` double(10,4) NOT NULL default &#39;0.0000&#39;,
  PRIMARY KEY  (`unique_id`),
  KEY `user` (`user`,`id`,`time_on`,`start_time`,`stop_time`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- --------------------------------------------------------

--
-- Структура таблицы `users`
--

CREATE TABLE IF NOT EXISTS `users` (
  `user` varchar(64) character set latin1 collate latin1_bin NOT NULL default &#39;&#39;,
  `password` varchar(254) character set latin1 collate latin1_bin NOT NULL default &#39;*&#39;,
  `crypt_method` tinyint(1) unsigned NOT NULL default &#39;1&#39;,
  `uid` smallint(5) unsigned NOT NULL auto_increment,
  `gid` smallint(5) unsigned NOT NULL default &#39;1&#39;,
  `deposit` double(8,2) NOT NULL default &#39;0.00&#39;,
  `credit` double(8,2) NOT NULL default &#39;0.00&#39;,
  `fio` varchar(128) NOT NULL default &#39;&#39;,
  `name` varchar(128) default NULL,
  `second_name` varchar(128) default NULL,
  `otch` varchar(128) default NULL,
  `phone` varchar(128) NOT NULL default &#39;&#39;,
  `address` varchar(128) NOT NULL default &#39;&#39;,
  `prim` varchar(254) NOT NULL default &#39;&#39;,
  `add_date` date NOT NULL default &#39;0000-00-00&#39;,
  `tos` tinyint(1) default NULL,
  `do_with_tos` tinyint(1) default NULL,
  `direction` tinyint(1) default NULL,
  `fixed` tinyint(1) default NULL,
  `fixed_cost` double(16,6) default NULL,
  `activation_time` bigint(15) default NULL,
  `total_time_limit` bigint(15) default NULL,
  `month_time_limit` bigint(15) default NULL,
  `week_time_limit` bigint(15) default NULL,
  `day_time_limit` bigint(15) default NULL,
  `total_traffic_limit` bigint(15) default NULL,
  `month_traffic_limit` bigint(15) default NULL,
  `week_traffic_limit` bigint(15) default NULL,
  `day_traffic_limit` bigint(15) default NULL,
  `total_money_limit` double(16,6) default NULL,
  `month_money_limit` double(16,6) default NULL,
  `week_money_limit` double(16,6) default NULL,
  `day_money_limit` double(16,6) default NULL,
  `login_time` varchar(254) default NULL,
  `huntgroup_name` varchar(64) default NULL,
  `simultaneous_use` smallint(5) default NULL,
  `port_limit` smallint(5) default NULL,
  `session_timeout` bigint(15) default NULL,
  `idle_timeout` bigint(15) default NULL,
  `allowed_prefixes` varchar(64) default NULL,
  `no_pass` tinyint(1) default NULL,
  `no_acct` tinyint(1) default NULL,
  `allow_callback` tinyint(1) default NULL,
  `other_params` varchar(254) default NULL,
  `allowed_servers` varchar(254) default NULL,
  `blocked` tinyint(3) unsigned NOT NULL default &#39;0&#39;,
  `activated` tinyint(3) unsigned NOT NULL default &#39;1&#39;,
  `expired` date NOT NULL default &#39;0000-00-00&#39;,
  `total_time` int(10) NOT NULL default &#39;0&#39;,
  `total_traffic` bigint(15) NOT NULL default &#39;0&#39;,
  `total_money` double(10,4) NOT NULL default &#39;0.0000&#39;,
  `last_connection` date NOT NULL default &#39;0000-00-00&#39;,
  `framed_ip` varchar(16) NOT NULL default &#39;&#39;,
  `frammed_ip2` varchar(16) NOT NULL,
  `local_addr` varchar(16) NOT NULL,
  `framed_mask` varchar(16) NOT NULL default &#39;255.255.255.255&#39;,
  `callback_number` varchar(64) NOT NULL default &#39;&#39;,
  `street` varchar(255) NOT NULL,
  `house` varchar(64) NOT NULL,
  `room` varchar(64) NOT NULL,
  `bezabon` enum(&#39;no&#39;,&#39;yes&#39;) NOT NULL default &#39;no&#39;,
  `segment` varchar(255) NOT NULL,
  `mac_addr` varchar(17) NOT NULL,
  `updown` set(&#39;down&#39;,&#39;up&#39;) NOT NULL default &#39;down&#39;,
  `up_n` int(11) NOT NULL default &#39;0&#39;,
  `fix` int(2) NOT NULL default &#39;0&#39;,
  `vlan_for_fix` varchar(25) NOT NULL default &#39;vlan4&#39;,
  PRIMARY KEY  (`uid`),
  KEY `user` (`user`)
) ENGINE=MyISAM  DEFAULT CHARSET=latin1 AUTO_INCREMENT=1043 ;

&lt;/pre&gt;

&lt;p&gt;Вот он main.cpp:&lt;/p&gt;

&lt;pre lang=&#34;cpp&#34; line=&#34;1&#34;&gt;#include &amp;lt;QtCore&gt;
#include &amp;lt;QCoreApplication&gt;
#include &amp;lt;QtSql&gt;
#include &amp;lt;QFile&gt;
#include &amp;lt;iostream&gt;
#include &amp;lt;cstdlib&gt;
#include &amp;lt;iomanip&gt;
#include &amp;lt;stdio.h&gt;
#include &amp;lt;stdlib.h&gt;
#include &amp;lt;string.h&gt;
#include &amp;lt;time.h&gt;
using namespace std;


#define SQLDRIVER &#34;QMYSQL&#34;
#define HOST &#34;10.1.1.1&#34;
#define DBNAME &#34;freenibs&#34;
#define USER &#34;arpwatch&#34;
#define PASSWORD &#34;arpwatch&#34;

int main(int argc, char *argv[])
{
    QCoreApplication a(argc, argv);
    QTextCodec *codec = QTextCodec::codecForName(&#34;CP1251&#34;);
    QTextCodec::setCodecForTr(codec);
    QTextCodec::setCodecForCStrings(codec);
    QSqlDatabase db = QSqlDatabase::addDatabase(SQLDRIVER);
    if( !db.isDriverAvailable(SQLDRIVER))
    {
        exit(1);
    }

    db.setHostName(HOST);
    db.setDatabaseName(DBNAME);
    db.setUserName(USER);
    db.setPassword(PASSWORD);
    //db.setPort(3306);
    QFile file(&#34;/arpwatch.table&#34;);
    if (! file.exists() ){
        std::cout&amp;lt;&amp;lt;&#34; /arpwatch.table 1&#34;;
        db.close();
        exit(1);
    }
    if( !file.open(QIODevice::ReadOnly)){
        std::cout&amp;lt;&amp;lt;&#34; /arpwatch.table 2&#34;;
        db.close();
        exit(1);
    }
    bool ok=db.open();
    if(ok!=true){
        std::cout&amp;lt;&amp;lt;&#34;unable connec&#39;t&#34;;
        exit(1);
    }

     QString ip_argv,mac,user;
     ip_argv=argv[1];
     mac=argv[2];

     //qDebug()&amp;lt;&amp;lt;ip_argv;
     int z=0;
     while (!file.atEnd()) {
         QString line = file.readLine();
         z=0;
         mac=&#34;&#34;;
         ip_argv=&#34;&#34;;
         user=&#34;&#34;;


        for(int i=0;i&amp;lt;line.size();++i){
            if(z==1)
                z=2;

            if(line.at(i)==&#39;K&#39;)
                z=1;
            if(line.at(i)==&#39;L&#39;)
                z=3;

            if(z==0)
                ip_argv.append(line.at(i));


            if(z==2)
                mac.append(line.at(i));
        }

     QSqlQuery query(&#34;SELECT `user` FROM `actions` WHERE `call_from` = &#39;&#34;+ip_argv+&#34;&#39; AND `start_time` &gt; FROM_UNIXTIME( UNIX_TIMESTAMP( NOW( ) ) -604800 ) GROUP BY `user` LIMIT 1&#34;);
     while (query.next()) {
        user = query.value(0).toString();
        //qDebug()&amp;lt;&amp;lt;ip_argv&amp;lt;&amp;lt;&#34; ---&gt; &#34;&amp;lt;&amp;lt;user;
        //qDebug()&amp;lt;&amp;lt;ip_argv&amp;lt;&amp;lt;&#34; ---&gt; &#34;&amp;lt;&amp;lt;user&amp;lt;&amp;lt;&#34;---&gt;&#34;&amp;lt;&amp;lt;mac&amp;lt;&amp;lt;endl;
        //qDebug()&amp;lt;&amp;lt;&#34;SELECT `user` FROM `actions` WHERE `call_from` = &#39;&#34;+ip_argv+&#34;&#39; AND `start_time` &gt; FROM_UNIXTIME( UNIX_TIMESTAMP( NOW( ) ) -604800 ) GROUP BY `user`&#34;;
        query.clear();
        query.prepare(&#34;UPDATE `freenibs`.`users` SET `freenibs`.`users`.`mac_addr` = &#39;&#34;+mac+&#34;&#39; WHERE `freenibs`.`users`.`user` =&#39;&#34;+user+&#34;&#39; LIMIT 1&#34;);
                //QSqlQuery query1(&#34;UPDATE `freenibs`.`users` SET `freenibs`.`users`.`mac_addr` = &#39;&#34;+mac+&#34;&#39; WHERE `freenibs`.`users`.`user` =&#39;&#34;+user+&#34;&#39; LIMIT 1&#34;);
        query.exec();
                //query1.clear();
        }



        }
        file.close();

        //dhcpd

        file1.close();
        file2.close();
        db.close();
}

&lt;/pre&gt;

&lt;p&gt;Makefile: (FreeBSD)&lt;/p&gt;

&lt;p&gt;Сборка просто make:)))&lt;/p&gt;

&lt;pre lang=&#34;make&#34; line=&#34;1&#34;&gt;#############################################################################
# Makefile for building: arp_watch
# Generated by qmake (2.01a) (Qt 4.4.3) on: Thu Jul 23 00:39:55 2009
# Project:  pro.pro
# Template: app
# Command: /usr/local/bin/qmake-qt4 -unix -o Makefile pro.pro
#############################################################################

####### Compiler, tools and options

CC            = cc
CXX           = c++
DEFINES       = -DQT_NO_DEBUG -DQT_SQL_LIB -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -fno-strict-aliasing -pipe -Wall -W $(DEFINES)
CXXFLAGS      = -pipe -O2 -fno-strict-aliasing -pipe -Wall -W $(DEFINES)
INCPATH       = -I/usr/local/share/qt4/mkspecs/freebsd-g++ -I. -I/usr/local/include/qt4/QtCore -I/usr/local/include/qt4/QtCore -I/usr/local/include/qt4/QtGui -I/usr/local/include/qt4/QtGui -I/usr/local/include/qt4/QtSql -I/usr/local/include/qt4/QtSql -I/usr/local/include/qt4 -I. -I. -I/usr/local/include
LINK          = c++
LFLAGS        = -pthread -Wl,-rpath,/usr/local/lib/qt4
LIBS          = $(SUBLIBS)  -L/usr/local/lib -L/usr/local/lib/qt4 -lQtSql -L/usr/local/lib/qt4 -L/usr/local/lib -pthread -pthread -lQtGui -pthread -lpng -lSM -lICE -pthread -pthread -lXi -lXrender -lXrandr -lfreetype -lfontconfig -lXext -lX11 -lQtCore -lz -lm -pthread -lgthread-2.0 -lglib-2.0 -liconv
AR            = ar cqs
RANLIB        =
QMAKE         = /usr/local/bin/qmake-qt4
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -R
INSTALL_FILE  = $(COPY_FILE)
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = $(COPY_FILE)
DEL_FILE      = rm -f
SYMLINK       = ln -sf
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp
OBJECTS       = main.o
DIST          = /usr/local/share/qt4/mkspecs/common/unix.conf \
                /usr/local/share/qt4/mkspecs/qconfig.pri \
                /usr/local/share/qt4/mkspecs/features/qt_functions.prf \
                /usr/local/share/qt4/mkspecs/features/qt_config.prf \
                /usr/local/share/qt4/mkspecs/features/exclusive_builds.prf \
                /usr/local/share/qt4/mkspecs/features/default_pre.prf \
                /usr/local/share/qt4/mkspecs/features/release.prf \
                /usr/local/share/qt4/mkspecs/features/default_post.prf \
                /usr/local/share/qt4/mkspecs/features/unix/thread.prf \
                /usr/local/share/qt4/mkspecs/features/warn_on.prf \
                /usr/local/share/qt4/mkspecs/features/qt.prf \
                /usr/local/share/qt4/mkspecs/features/moc.prf \
                /usr/local/share/qt4/mkspecs/features/resources.prf \
                /usr/local/share/qt4/mkspecs/features/uic.prf \
                /usr/local/share/qt4/mkspecs/features/yacc.prf \
                /usr/local/share/qt4/mkspecs/features/lex.prf \
                pro.pro
QMAKE_TARGET  = arp_watch
DESTDIR       =
TARGET        = arp_watch

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
        $(CXX) -c $(CXXFLAGS) $(INCPATH) -o &#34;$@&#34; &#34;$&amp;lt;&#34;

.cc.o:
        $(CXX) -c $(CXXFLAGS) $(INCPATH) -o &#34;$@&#34; &#34;$&amp;lt;&#34;

.cxx.o:
        $(CXX) -c $(CXXFLAGS) $(INCPATH) -o &#34;$@&#34; &#34;$&amp;lt;&#34;

.C.o:
        $(CXX) -c $(CXXFLAGS) $(INCPATH) -o &#34;$@&#34; &#34;$&amp;lt;&#34;

.c.o:
        $(CC) -c $(CFLAGS) $(INCPATH) -o &#34;$@&#34; &#34;$&amp;lt;&#34;

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)
        $(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: pro.pro  /usr/local/share/qt4/mkspecs/freebsd-g++/qmake.conf /usr/local/share/qt4/mkspecs/common/unix.conf \
                /usr/local/share/qt4/mkspecs/qconfig.pri \
                /usr/local/share/qt4/mkspecs/features/qt_functions.prf \
                /usr/local/share/qt4/mkspecs/features/qt_config.prf \
                /usr/local/share/qt4/mkspecs/features/exclusive_builds.prf \
                /usr/local/share/qt4/mkspecs/features/default_pre.prf \
                /usr/local/share/qt4/mkspecs/features/release.prf \
                /usr/local/share/qt4/mkspecs/features/default_post.prf \
                /usr/local/share/qt4/mkspecs/features/unix/thread.prf \
                /usr/local/share/qt4/mkspecs/features/warn_on.prf \
                /usr/local/share/qt4/mkspecs/features/qt.prf \
                /usr/local/share/qt4/mkspecs/features/moc.prf \
                /usr/local/share/qt4/mkspecs/features/resources.prf \
                /usr/local/share/qt4/mkspecs/features/uic.prf \
                /usr/local/share/qt4/mkspecs/features/yacc.prf \
                /usr/local/share/qt4/mkspecs/features/lex.prf \
                /usr/local/lib/qt4/libQtSql.prl \
                /usr/local/lib/qt4/libQtCore.prl \
                /usr/local/lib/qt4/libQtGui.prl
        $(QMAKE) -unix -o Makefile pro.pro
/usr/local/share/qt4/mkspecs/common/unix.conf:
/usr/local/share/qt4/mkspecs/qconfig.pri:
/usr/local/share/qt4/mkspecs/features/qt_functions.prf:
/usr/local/share/qt4/mkspecs/features/qt_config.prf:
/usr/local/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/local/share/qt4/mkspecs/features/default_pre.prf:
/usr/local/share/qt4/mkspecs/features/release.prf:
/usr/local/share/qt4/mkspecs/features/default_post.prf:
/usr/local/share/qt4/mkspecs/features/unix/thread.prf:
/usr/local/share/qt4/mkspecs/features/warn_on.prf:
/usr/local/share/qt4/mkspecs/features/qt.prf:
/usr/local/share/qt4/mkspecs/features/moc.prf:
/usr/local/share/qt4/mkspecs/features/resources.prf:
/usr/local/share/qt4/mkspecs/features/uic.prf:
/usr/local/share/qt4/mkspecs/features/yacc.prf:
/usr/local/share/qt4/mkspecs/features/lex.prf:
/usr/local/lib/qt4/libQtSql.prl:
/usr/local/lib/qt4/libQtCore.prl:
/usr/local/lib/qt4/libQtGui.prl:
qmake:  FORCE
        @$(QMAKE) -unix -o Makefile pro.pro

dist:
        @$(CHK_DIR_EXISTS) .tmp/arp_watch1.0.0 || $(MKDIR) .tmp/arp_watch1.0.0
        $(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/arp_watch1.0.0/ &amp;#038;&amp;#038; $(COPY_FILE) --parents main.cpp .tmp/arp_watch1.0.0/ &amp;#038;&amp;#038; (cd `dirname .tmp/arp_watch1.0.0` &amp;#038;&amp;#038; $(TAR) arp_watch1.0.0.tar arp_watch1.0.0 &amp;#038;&amp;#038; $(COMPRESS) arp_watch1.0.0.tar) &amp;#038;&amp;#038; $(MOVE) `dirname .tmp/arp_watch1.0.0`/arp_watch1.0.0.tar.gz . &amp;#038;&amp;#038; $(DEL_FILE) -r .tmp/arp_watch1.0.0


clean:compiler_clean
        -$(DEL_FILE) $(OBJECTS)
        -$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
        -$(DEL_FILE) $(TARGET)
        -$(DEL_FILE) Makefile


mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all:
compiler_moc_header_clean:
compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
        -$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean:

####### Compile

main.o: main.cpp
        $(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:


&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>add_cards.php</title>
      <link>http://b-comm.ru/billing/add_cards-php</link>
      <pubDate>Sat, 14 Jan 2006 21:54:33 +0000</pubDate>
      
      <guid>http://b-comm.ru/billing/add_cards-php</guid>
      <description>&lt;p&gt;add_cards.php&lt;/p&gt;

&lt;pre lang=&#34;php&#34;&gt;&lt;?
include_once(&#34;defines.php&#34;);
if(!USE_CARDS) exit();

include_once(&#34;mysql.php&#34;);
$series = sprintf(&#34;%04d&#34;, $series);

$flag = &#34;false&#34;;
while ($flag == &#34;false&#34;) {
    for ($i = 1; $i &lt;= $count; $i++ ) {
        $arr[$i] = mt_rand(1000000,9999999);
        $arr[$i] .= mt_rand(1000000,9999999);

        $arr1[$i] = mt_rand(1000000,9999999);
       // $arr1[$i] .= mt_rand(1000000,9999999);
    }
    $flag = &#34;&#34;;
    for ($i = 1; $i &lt;= $count; $i++) {
        for ($j = 1; $j &lt;= $count; $j++) {
            if ($arr[$i] == $arr[$j] &amp;#038;&amp;#038; $i != $j) {
                $flag = &#34;false&#34;; 
            }
        }
    }
}

$result = mysql_query(&#34;SELECT series FROM &#34;.CARDS_TABLE.&#34; WHERE series=&#39;&#34;.$series.&#34;&#39;&#34;,$LINK_CARDS) or die(&#34;Error while insert cards `&#34;.mysql_error($LINK_CARDS).&#34;&#39;&#34;);
if (mysql_num_rows($result) &gt; 0 ) {
    echo &#34;

&lt;CENTER&gt;
  éÚ×ÅÎÉÔÅ. îÏ ÄÁÎÎÁÑ ÓÅÒÉÑ ÕÖÅ ÓÕÝÅÓÔ×ÕÅÔ.
&lt;/CENTER&gt;&#34;;
}else{
    for ($i = 1; $i &amp;lt;= $count; $i++ ) {
//  mysql_query(&#34;INSERT INTO &#34;.CARDS_TABLE.&#34; SET series=&#39;&#34;.$series.&#34;&#39;, nominal=&#39;&#34;.$nominal.&#34;&#39;, expired=&#39;&#34;.$year.&#34;-&#34;.$month.&#34;-&#34;.$day.&#34;&#39;, sn=&#39;&#34;.$arr[$i].&#34;&#39;, status=&#39;a&#39;&#34;, $LINK_CARDS) or die(&#34;Error while insert cards serial-number `&#34;.mysql_error($LINK_CARDS).&#34;&#39;&#34;);

    mysql_query(&#34;INSERT INTO &#34;.CARDS_TABLE.&#34; SET series=&#39;&#34;.$series.&#34;&#39;, nominal=&#39;&#34;.$nominal.&#34;&#39;, n=&#39;&#34;.$series.$arr1[$i].&#34;&#39;,expired=&#39;&#34;.$year.&#34;-&#34;.$month.&#34;-&#34;.$day.&#34;&#39;, sn=&#39;&#34;.$arr[$i].&#34;&#39;, status=&#39;a&#39;&#34;, $LINK_CARDS) or die(&#34;Error while insert cards serial-number `&#34;.mysql_error($LINK_CARDS).&#34;&#39;&#34;);

    }
    echo &#34;

&lt;CENTER&gt;
  $count ËÁÒÔÏÞÅË ÓÅÒÉÉ $series ÎÏÍÉÎÁÌÏÍ $nominal ÓÏÚÄÁÎÙ.
&lt;/CENTER&gt;&#34;;
//echo &#34;w&#34;;
//,n=&#39;&#34;.$arr1[$i].&#34;&#39;
    
}
$TOP = &#34;ëÁÒÔÏÞËÉ&#34;;
include(&#34;top.php&#34;);
?&gt;
  

&lt;CENTER&gt;
  &lt;?
include(&#34;new_cards_menu.php&#34;);
include(&#34;cards_series_list.php&#34;);
?&gt;
    
&lt;/CENTER&gt;


&lt;?
include(&#34;bottom.php&#34;);
?&gt;

&lt;/pre&gt;

&lt;p&gt;&amp;#8212;&amp;#8212;&amp;#8212;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://filmokat.ru/?p=21036&#34;&gt;2012 цвет черемухи смотреть&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>